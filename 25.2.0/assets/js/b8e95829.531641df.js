"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[727],{5680:(e,n,t)=>{t.d(n,{xA:()=>p,yg:()=>d});var i=t(6540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(t),g=r,d=u["".concat(s,".").concat(g)]||u[g]||m[g]||o;return t?i.createElement(d,a(a({ref:n},p),{},{components:t})):i.createElement(d,a({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=g;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[u]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=t(8168),r=(t(6540),t(5680));const o={sidebar_position:1.11,sidebar_label:"Licensing implementation",description:"Licensing entitlement for annotation and interface"},a="Licensing",l={unversionedId:"general/howto/1_11_use_licensing",id:"general/howto/1_11_use_licensing",title:"Licensing",description:"Licensing entitlement for annotation and interface",source:"@site/articles/general/howto/1_11_use_licensing.md",sourceDirName:"general/howto",slug:"/general/howto/1_11_use_licensing",permalink:"/d2sv-sdk/25.2.0/general/howto/1_11_use_licensing",draft:!1,tags:[],version:"current",sidebarPosition:1.11,frontMatter:{sidebar_position:1.11,sidebar_label:"Licensing implementation",description:"Licensing entitlement for annotation and interface"},sidebar:"general",previous:{title:"Create custom service method for generic(calling service's method) menu action",permalink:"/d2sv-sdk/25.2.0/general/howto/1_10_create_custom_service_and_callback_action"},next:{title:"Compiling Exported plugin as maven project",permalink:"/d2sv-sdk/25.2.0/general/howto/1_12_running_exported_plugin_project"}},s={},c=[{value:"Overview",id:"overview",level:2},{value:"Implementation of Licensing",id:"implementation-of-licensing",level:2},{value:"Using Annotation: ~<code>@FeatureEntitlement</code>",id:"using-annotation-featureentitlement",level:3},{value:"<strong>Using Interface ~<code>IProductEntitlementCheckEx</code></strong>",id:"using-interface-iproductentitlementcheckex",level:3}],p={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.yg)(u,(0,i.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"licensing"},"Licensing"),(0,r.yg)("h2",{id:"overview"},"Overview"),(0,r.yg)("p",null,"Licensing is a system that controls the usage and distribution of features within an application, ensuring that only authorized users can access specific functionalities based on defined terms and conditions."),(0,r.yg)("blockquote",null,(0,r.yg)("p",{parentName:"blockquote"},"Licensing generally falls into two categories:"),(0,r.yg)("ul",{parentName:"blockquote"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"User-Based Licensing:")," Charges users based on the specific features they are entitled to use."),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("strong",{parentName:"li"},"Transaction-Based Licensing:")," Charges users based on the number of transactions or actions performed within the application."))),(0,r.yg)("h2",{id:"implementation-of-licensing"},"Implementation of Licensing"),(0,r.yg)("p",null,"In general, licensing can be implemented in two main ways, depending on the developer's requirements:"),(0,r.yg)("p",null,"If the developer wants to restrict access to specific feature within the application, they can use annotations to manage this at a granular level."),(0,r.yg)("p",null,"If the developer intends to block access to the entire application, they can implement an interface-based approach to enforce licensing across all components."),(0,r.yg)("h3",{id:"using-annotation-featureentitlement"},"Using Annotation: ~",(0,r.yg)("inlineCode",{parentName:"h3"},"@FeatureEntitlement")),(0,r.yg)("p",null,"Developers can secure controllers by annotating them with ",(0,r.yg)("inlineCode",{parentName:"p"},"@FeatureEntitlement"),", passing the required product code for feature entitlement checks. This annotation ensures that only authorized users can access the associated features at runtime."),(0,r.yg)("p",null,"Sample Code:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-dtd"},'@RestController("controller-name")\n@FeatureEntitlement(PRODUCT_CODE)\npublic class FeatureController {\n    // Controller logic here\n}\n')),(0,r.yg)("p",null,"Annotation is used to secure the ",(0,r.yg)("inlineCode",{parentName:"p"},"featureController")," with the specified product code (",(0,r.yg)("inlineCode",{parentName:"p"},"PRODUCT_CODE"),"),\nwhich ensures that only users with the appropriate entitlement can access the controller's functionality."),(0,r.yg)("h3",{id:"using-interface-iproductentitlementcheckex"},(0,r.yg)("strong",{parentName:"h3"},"Using Interface ~",(0,r.yg)("inlineCode",{parentName:"strong"},"IProductEntitlementCheckEx"))),(0,r.yg)("p",null,"Developers can enable feature entitlement checks, using the ",(0,r.yg)("inlineCode",{parentName:"p"},"IFeatureEntitlementCheckEx")," interface. Any solution that needs to implement custom feature entitlement logic should implement this interface."),(0,r.yg)("p",null,"Sample Code:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-dtd"},"        package com.opentext.d2.rest.context.jc;\n        import org.springframework.stereotype.Component;\n        import com.documentum.fc.client.impl.session.ISession;\n        import com.opentext.common.IProductEntitlementCheckEx;\n\n        @Component // Ensures this class is registered as a Spring bean\n        public class CustomFeatureEntitlementCheck implements IProductEntitlementCheckEx {\n\n            @Override\n            public boolean isEntitled(ISession session) {\n                boolean isEntitled = false;\n\n            // Custom logic to determine if the user has the required feature entitlement\n                return isEntitled;\n            }\n        }\n")),(0,r.yg)("p",null,"The package of this file needs to be appended in rest-api-runtime.properties file so that spring can load it."),(0,r.yg)("p",null,"rest.context.config.location=com.opentext.d2.rest.context.jc"),(0,r.yg)("p",null,"For more information on Java Documentation you can refer ",(0,r.yg)("a",{parentName:"p",href:"../../d2rest/com/opentext/common/IProductEntitlementCheckEx.html"},"here")))}m.isMDXComponent=!0}}]);