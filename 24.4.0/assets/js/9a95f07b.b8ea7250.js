"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[4486],{5680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>u});var a=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,u=p["".concat(s,".").concat(m)]||p[m]||g[m]||i;return n?a.createElement(u,l(l({ref:t},d),{},{components:n})):a.createElement(u,l({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:r,l[1]=o;for(var c=2;c<i;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7660:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var a=n(8168),r=(n(6540),n(5680));const i={sidebar_position:1.07,sidebar_label:"Use external widget in Documentum Client",description:"Usage of external widget in Documentum Client"},l="External widget in Documentum Client",o={unversionedId:"general/howto/1_07_external_widgets",id:"general/howto/1_07_external_widgets",title:"External widget in Documentum Client",description:"Usage of external widget in Documentum Client",source:"@site/articles/general/howto/1_07_external_widgets.md",sourceDirName:"general/howto",slug:"/general/howto/1_07_external_widgets",permalink:"/d2sv-sdk/24.4.0/general/howto/1_07_external_widgets",draft:!1,tags:[],version:"current",sidebarPosition:1.07,frontMatter:{sidebar_position:1.07,sidebar_label:"Use external widget in Documentum Client",description:"Usage of external widget in Documentum Client"},sidebar:"general",previous:{title:"Upgrade SDK workspace/plugins",permalink:"/d2sv-sdk/24.4.0/general/howto/1_06_upgrade_workspace"},next:{title:"Create custom service method for generic(calling service's method) menu action",permalink:"/d2sv-sdk/24.4.0/general/howto/1_10_create_custom_service_and_callback_action"}},s={},c=[{value:"How to register external application with Documentum Client.",id:"how-to-register-external-application-with-documentum-client",level:2},{value:"Subscription and publishing an event in External widget client",id:"subscription-and-publishing-an-event-in-external-widget-client",level:2},{value:"How to subscribe an event",id:"how-to-subscribe-an-event",level:3},{value:"How to publish an event",id:"how-to-publish-an-event",level:3},{value:"Supported Events",id:"supported-events",level:2},{value:"Sample External Widget Application",id:"sample-external-widget-application",level:2},{value:"external.html",id:"externalhtml",level:3},{value:"external.js",id:"externaljs",level:3}],d={toc:c},p="wrapper";function g(e){let{components:t,...n}=e;return(0,r.yg)(p,(0,a.A)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"external-widget-in-documentum-client"},"External widget in Documentum Client"),(0,r.yg)("p",null,"D2 supports displaying of external clients which are deployed in the same app server using\nthe external widget configuration."),(0,r.yg)("p",null,"Admin can create widgets with widgettype as ExternalWidget and specify the path for the external client\nstarting from the context. Details can be seen in the Documentum Client administration guide."),(0,r.yg)("p",null,"In Documentum Client, external widgets can be configured as part of the menu configuration with either as dynamic menus\nor as direct static menus. On selection of the menu items, external widget will be loaded in an iframe as a side panel."),(0,r.yg)("p",null,"External widgets are mainly used for the use cases where the widgets want to have a communication with the\nD2 and vice versa. This is achieved using the library ",(0,r.yg)("em",{parentName:"p"},"OpenAjaxManagedHub-all.js"),". In order to ease\nthe usage of the library we have exposed a wrapper module called ",(0,r.yg)("em",{parentName:"p"},"DCTM-OAH.js")," which will have easily\nunderstandable API for communication."),(0,r.yg)("p",null,"Both the libraries will be present under the following path"),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"{D2SV-ROOT}/ui/OpenAjaxManagedHub-all.js")),(0,r.yg)("p",null,(0,r.yg)("em",{parentName:"p"},"{D2SV-ROOT}/ui/DCTM-OAH.js")),(0,r.yg)("p",null,"All the communication are driven through event mechanism which can be published/subriced to from the client"),(0,r.yg)("h2",{id:"how-to-register-external-application-with-documentum-client"},"How to register external application with Documentum Client."),(0,r.yg)("p",null,"All the external widgets need to map the ",(0,r.yg)("i",null,"OpenAjaxManagedHub-all.js")," and ",(0,r.yg)("i",null,"DCTM-OAH.js")," as part of\nthe html/jsp in the external widgets."),(0,r.yg)("p",null,"In order to communicate with Documentum Client, external application needs to register as a client to Documentum Client. This can be\nas follows"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"}," dctmOpenAjaxHubClient = new DCTMOpenAjaxHub();\ndctmOpenAjaxHubClient.connectHub(connectCompleted, onActiveWidget);\n\nfunction connectCompleted(hubClient, success, error) {\n \n}\nfunction onActiveWidget(bActiveFlag) {\n    \n}\n")),(0,r.yg)("p",null,"In the above code ",(0,r.yg)("em",{parentName:"p"},"connectCompleted")," and ",(0,r.yg)("em",{parentName:"p"},"onActiveWidget")," are callback methods triggered when the client\nis registered."),(0,r.yg)("h2",{id:"subscription-and-publishing-an-event-in-external-widget-client"},"Subscription and publishing an event in External widget client"),(0,r.yg)("p",null,"To listen to events performed in the Documentum Client, external widget can subscribe to the events . Similarly external\nwidgets can publish an event which will be listened by Documentum Client and perform accordingly"),(0,r.yg)("p",null,"All the messages that are published or subscribed will of ",(0,r.yg)("em",{parentName:"p"},"OpenAjaxMessage")," type. This is a standardized\nJS object created to ease the usage of OAH."),(0,r.yg)("p",null,"Object details will be present in ",(0,r.yg)("em",{parentName:"p"},"DCTM-OAH.js")),(0,r.yg)("h3",{id:"how-to-subscribe-an-event"},"How to subscribe an event"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"}," dctmOpenAjaxHubClient.subscribeToChannels(sChannel, fCallbackDataReceived, bHandleMessageIfNotDisplayed);\n")),(0,r.yg)("p",null,"In the above case ",(0,r.yg)("em",{parentName:"p"},"sChannel")," will be array of events to listen to from documentum"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"sChannel"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Arrays of String"),(0,r.yg)("td",{parentName:"tr",align:"center"},"array of events to listen to from Documentum Client")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"fCallbackDataReceived"),(0,r.yg)("td",{parentName:"tr",align:"center"},"function"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Callback function to be triggered when published from Documentum Client")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"bHandleMessageIfNotDisplayed"),(0,r.yg)("td",{parentName:"tr",align:"center"},"boolean"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Boolean flag to be triggered to respond event if the widget is not visible")))),(0,r.yg)("h3",{id:"how-to-publish-an-event"},"How to publish an event"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"    let msg = new OpenAjaxMessage();\n    dctmOpenAjaxHubClient.sendMessage(sChannel, oMessage);\n")),(0,r.yg)("p",null,"In the above case ",(0,r.yg)("em",{parentName:"p"},"sChannel")," will be the event to publish "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Parameter"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Type"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"sChannel"),(0,r.yg)("td",{parentName:"tr",align:"center"},"String"),(0,r.yg)("td",{parentName:"tr",align:"center"},"event name")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"oMessage"),(0,r.yg)("td",{parentName:"tr",align:"center"},"Object"),(0,r.yg)("td",{parentName:"tr",align:"center"},(0,r.yg)("em",{parentName:"td"},"OpenAjaxMessage")," object that will carry the necessary information to be published")))),(0,r.yg)("h2",{id:"supported-events"},"Supported Events"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:"center"},"Event"),(0,r.yg)("th",{parentName:"tr",align:"center"},"Details"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"D2_EVENT_SELECT_OBJECT"),(0,r.yg)("td",{parentName:"tr",align:"center"},"This is a subscribed event which will be published from D2 whenever an object is selected. ",(0,r.yg)("br",null),"This will return the following information ",(0,r.yg)("em",{parentName:"td"},"r_object_id")," as ",(0,r.yg)("em",{parentName:"td"},"oma_id"),", ",(0,r.yg)("em",{parentName:"td"},"type")," and ",(0,r.yg)("em",{parentName:"td"},"aContentType"))),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"D2_EVENT_SELECT_OBJECTS"),(0,r.yg)("td",{parentName:"tr",align:"center"},"This is a subscribed event which will be published from D2 whenever  object/objects is selected.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"D2_ACTION_DM_TICKET_GENERATE"),(0,r.yg)("td",{parentName:"tr",align:"center"},"This event is published to D2 to request for for a new DCTM ticket. Oonce the DCTM ticket is generated from D2, it will publish the ticket information under thew event _D2_EVENT_DM_TICKET_GENERATED")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"D2_EVENT_DM_TICKET_GENERATED"),(0,r.yg)("td",{parentName:"tr",align:"center"},"This event will be published from D2 whenever it geenrates a new ticket on request from external clients as part of event D2_EVENT_DM_TICKET_GENERATE")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:"center"},"D2_ACTION_EXECUTE"),(0,r.yg)("td",{parentName:"tr",align:"center"},"This event is published to D2 to execute a generic action services. It will require the following parameter as part of the message: eService, eMethod, rType, rAction")))),(0,r.yg)("h2",{id:"sample-external-widget-application"},"Sample External Widget Application"),(0,r.yg)("p",null,"Below is a sample external widget which has 2 file external.js and external.html.\nCreate a folder external in app server and add these 2 files"),(0,r.yg)("h3",{id:"externalhtml"},"external.html"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'<!DOCTYPE html>\n<html lang="en">\n<head>\n    <script type="text/javascript" language="javascript" src="<replace with context to D2SV>/ui/OpenAjaxManagedHub-all.js"><\/script>\n    <script type="text/javascript" language="javascript" src="<replace with context to D2SV>/ui/DCTM-OAH.js"><\/script>\n\n    <script type="text/javascript" language="javascript" src="external.js"><\/script>\n    <meta charset="UTF-8">\n\n <style>\n        .button {\n            align-items: center;\n            border: none;\n            border-radius: 16px;\n            cursor: pointer;\n            font-size: 14px;\n            height: 32px;\n            justify-content: center;\n            min-width: 80px;\n            padding: 0px 24px;\n            white-space: nowrap;\n            border: 1px solid #232e72;\n            box-sizing: border-box;\n            color:  #232e72\n        }\n\n\n        TABLE > THEAD {\n            background-color: #eef2f4;\n            height: 42px;\n            line-height: 37px;\n        }\n\n        TABLE > TBODY > TR, TABLE > THEAD > TR{\n            border-bottom-color: rgb(51, 51, 51);\n            font-size: 13px;\n        }\n        TABLE > TBODY > TR > TD{\n            color: #333333;\n            font-size:13px\n\n        }\n\n        TEXTAREA{\n           flex: 1 1 0;\n            line-height: normal;\n            text-align: left;\n            border: 1px solid #a7a9ac;\n            -moz-border-radius: 3px;\n            -webkit-border-radius: 3px;\n            border-radius: 3px;\n            padding: 3px;\n            width: 100%;\n            max-height: 68px;\n            height: 68px;\n            padding-left: 0.5em;\n        }\n\n\n        body{\n            font-family: "OpenText Sans", "Helvetica", "Arial", sans-serif;\n        }\n\n        div.header{\n            background-color: #dce4e8;\n            color: #333333;\n            border-bottom: 1px solid #d5d5d5;\n            width: 100%;\n            height: 28px;\n            text-align: center;\n            vertical-align: middle;\n            padding-top: 11px;\n        }\n    </style>\n    <title>Title</title>\n</head>\n<body>\n<div class="header">Smartview External Widget</div>\n<table style="width:100%">\n    <thead>\n    <tr>\n        <th style="width:30%">Subscribed Event</th>\n        <th  style="width:70%">Event Response</th>\n    </tr>\n    </thead>\n    <tbody id="eventDetailsBody"></tbody>\n</table>\n\n<button class="button" onclick="requestNewTicket()">generate ticket</button>\n<button class="button" onclick="requestNewActionEvent()">Show Report Templates</button>\n</body>\n</html>\n')),(0,r.yg)("h3",{id:"externaljs"},"external.js"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'let svEvents = null;\nlet dctmOpenAjaxHubClient = null;\nlet isActive = false; // assume widget is invisible / out-of-focus until "D2_EVENT_WIDGET_DISPLAYED" event received\n\n\n\nlet initSVExternalWidget = () => {\n    svEvents = [ "D2_EVENT_SELECT_OBJECT", "D2_EVENT_SELECT_OBJECTS", "D2_EVENT_DM_TICKET_GENERATED"];\n    window.onload = function() {\n        loadEventTable();\n    };\n\n    dctmOpenAjaxHubClient = new DCTMOpenAjaxHub();\n    dctmOpenAjaxHubClient.connectHub(connectCompleted, onActiveWidget);\n}\n\nlet connectCompleted = (hubClient, success, error) => {\n    if (success) {\n        console.log("Widget connected to D2 client hub.");\n        dctmOpenAjaxHubClient.subscribeToChannels(svEvents, d2MessageHandler, true);\n    } else {\n        console.error("Widget unable to connect to D2 client hub.");\n    }\n}\n\n// Widget activation callback\nlet onActiveWidget =  (bActiveFlag) => {\n    console.info("Widget " + (bActiveFlag ? "loaded" : "unloaded") +\n        " by D2: active=" + isActive + ", events=" + svEvents);\n}\n\nlet d2MessageHandler = (event, message) => {\n    if(event===\'D2_EVENT_DM_TICKET_GENERATED\'){\n        loadTicketGenerated(message);\n    }\n    else if(event===\'D2_EVENT_SELECT_OBJECT\'){\n        loadObjectSelection(message)\n    }\n    else{\n        document.getElementById(event).innerHTML= message;\n    }\n\n}\n\nlet loadTicketGenerated = (message) => {\n    let text = "";\n    text+="ticket = "+message.get("ticket")+"\\n";\n    text+="ticket_timeout = "+message.get("ticket_timeout")+"\\n";\n    text+="ticket_time_generated = "+message.get("ticket_time_generated")+"\\n";\n    text+="ticket_time_expiration = "+message.get("ticket_time_expiration")+"\\n";\n    document.getElementById(\'D2_EVENT_DM_TICKET_GENERATED\').innerHTML= text;\n}\n\nlet loadObjectSelection = (message) => {\n    let text = "";\n    text+="id = "+message.get("oam_id")+"\\n";\n    text+="type = "+message.get("type")+"\\n";\n    text+="aContentType = "+message.get("aContentType")+"\\n";\n    document.getElementById(\'D2_EVENT_SELECT_OBJECT\').innerHTML= text;\n}\n\n\nlet requestNewTicket = () =>{\n    let msg = new OpenAjaxMessage();\n    msg.setGlobal(true);\n    dctmOpenAjaxHubClient.sendMessage("D2_ACTION_DM_TICKET_GENERATE", msg);\n}\n\nlet requestNewActionEvent = () => {\n    let messageToSend = new OpenAjaxMessage();\n\n    let queryFormConfigName = "QF DCTM-Reports Templates";\n\n    // Specify a non-null ID (to pass request validation)\n    messageToSend.put("oam_id", "");\n\n    //In the message, we need to define what properties will be sent. Here r_object_type\n    messageToSend.put("list", "r_object_type");\n\n    //We set the r_object_type value\n    messageToSend.put("r_object_type", \'tt_report\');\n\n    //set the query form config name which will be used to update the doclist\n    messageToSend.put("config", queryFormConfigName);\n\n    //Then we define what service and what method in the service will be called.\n    //We call the Search service and the runQueryFormSearch method.\n    //Calling this service will update the user\'s last search object\n    messageToSend.put("eService", "Search");\n    messageToSend.put("eMethod", "runQueryFormSearch");\n\n    // When the service call completes, we can define an action to be executed. Here, an event will be posted.\n    messageToSend.put("rType", "EVENT");\n\n    // As the last search has been updated by the web service call, we will post\n    //    the D2_ACTION_SEARCH_DOCUMENT event to display the search results\n    messageToSend.put("rAction", "D2_ACTION_SEARCH_DOCUMENT::oam_id==lastSearch");\n\n    //The message is now ready, it can be posted in the Hub\n    dctmOpenAjaxHubClient.sendMessage("D2_ACTION_EXECUTE", messageToSend);\n}\n\nlet loadEventTable = () =>{\n    document.getElementById("eventDetailsBody").innerHTML="";\n    for(let event of svEvents){\n        var tr = document.createElement("tr");\n        tr.innerHTML= "<td>"+event+"</td><td><textarea style=\'width:98%\' id=\'"+event+"\' rows=\'5\'></textarea></td>";\n        document.getElementById("eventDetailsBody").append(tr);\n    }\n}\n\n\n/**\n * Loading the Documentum Client OAH.\n */\n\ninitSVExternalWidget();\n\n')))}g.isMDXComponent=!0}}]);