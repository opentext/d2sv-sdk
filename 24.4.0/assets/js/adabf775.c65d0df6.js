"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[112],{5680:(e,t,o)=>{o.d(t,{xA:()=>g,yg:()=>f});var n=o(6540);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var d=n.createContext({}),s=function(e){var t=n.useContext(d),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},g=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},m="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,g=l(e,["components","mdxType","originalType","parentName"]),m=s(o),u=r,f=m["".concat(d,".").concat(u)]||m[u]||c[u]||i;return o?n.createElement(f,a(a({ref:t},g),{},{components:o})):n.createElement(f,a({ref:t},g))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=u;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l[m]="string"==typeof e?e:r,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},4410:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=o(8168),r=(o(6540),o(5680));const i={sidebar_position:1.01,sidebar_label:"Set form mode for D2FS dialog",description:"Control UI mode, Readonly and Editable"},a="Set form mode for D2FS dialog",l={unversionedId:"general/howto/d2fsdialog/1_01_assign_form_mode_for_chained_dialogs",id:"general/howto/d2fsdialog/1_01_assign_form_mode_for_chained_dialogs",title:"Set form mode for D2FS dialog",description:"Control UI mode, Readonly and Editable",source:"@site/articles/general/howto/d2fsdialog/1_01_assign_form_mode_for_chained_dialogs.md",sourceDirName:"general/howto/d2fsdialog",slug:"/general/howto/d2fsdialog/1_01_assign_form_mode_for_chained_dialogs",permalink:"/d2sv-sdk/24.4.0/general/howto/d2fsdialog/1_01_assign_form_mode_for_chained_dialogs",draft:!1,tags:[],version:"current",sidebarPosition:1.01,frontMatter:{sidebar_position:1.01,sidebar_label:"Set form mode for D2FS dialog",description:"Control UI mode, Readonly and Editable"},sidebar:"general",previous:{title:"D2FS Dialog",permalink:"/d2sv-sdk/24.4.0/general/howto/d2fsdialog/"},next:{title:"Customize dialog response",permalink:"/d2sv-sdk/24.4.0/general/howto/d2fsdialog/1_02_custom_dialog"}},d={},s=[],g={toc:s},m="wrapper";function c(e){let{components:t,...o}=e;return(0,r.yg)(m,(0,n.A)({},g,o,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"set-form-mode-for-d2fs-dialog"},"Set form mode for D2FS dialog"),(0,r.yg)("p",null,"The UI presentation of D2FS dialogs can be rendered in either editable(",(0,r.yg)("code",null,"create"),") or readonly(",(0,r.yg)("code",null,"read"),") fashion."),(0,r.yg)("p",null,"When rendering a dialog form on D2 Smartview UI, this is determined by checking for the form_mode attribute of dialog\nxml."),(0,r.yg)("p",null,"When creating a D2FS dialog, the workspace assistant prompts user to select the form_mode. The selected value from\nworkspace assistant is set in the dialog definition xml file\n",(0,r.yg)("inlineCode",{parentName:"p"},"<Plugins Directory>\\src\\main\\resources\\xml\\dialog\\<Dialog Name>.xml"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'<dialog auto_smartview_edit_mode="false" buttons_right="false" focus="" height="500" id="SomeDialog" initial_invalid="false" resizable="true" signoff_creation="false" signoff_edit="false" signoff_import="false" signoff_intention_dictionary="" signoff_intention_required="false" width="400" form_mode="create">\n  <content>\n    <text advancedView_required="true" condition_required="true" control="true" id="name_field"/>\n  </content>\n  <buttons>\n    <button action="validDialog()" id="buttonOk" isPrimary="true"/>\n    <button action="cancelDialog()" id="buttonCancel"/>\n  </buttons>\n  <signoff_fallback_message>\n    <message locale="en" value=""/>\n  </signoff_fallback_message>\n</dialog>\n')),(0,r.yg)("p",null,"But this can be overwritten later either by editing the dialog definition xml file or\nby setting ",(0,r.yg)("code",null,"form_mode")," attribute for ",(0,r.yg)("code",null,"result")," XmlNode in ",(0,r.yg)("code",null,"buildDialog")," method of\n",(0,r.yg)("inlineCode",{parentName:"p"},"<Plugins Directory>\\src\\main\\java\\<Maven Group Id>\\smartview\\<Plugin Name>\\dialogs\\<Dialog Name>.java")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'public class SomeDialog extends AbstractDialog implements ID2Dialog {\n    ...\n    @Override\n    public XmlNode buildDialog(D2fsContext context, List<Attribute> attributes) throws Exception {\n        ...\n        XmlNode result = super.buildDialog(context, dialogFile, labelsBundle, context.getFirstObject(), defaultValues);\n\n        if(result == null) {\n            result = super.buildDialog(context, attributes);\n        }\n        \n        // Custom logic to determine formMode at run time\n        String formMode = 1 == 0 ? "read" : "create";\n        \n        result.setAttribute("form_mode", formMode);\n\n        return result;\n    }\n    ...    \n}\n')),(0,r.yg)("p",null,"In case of chained dialogs, if the chained dialog is returned as result from ",(0,r.yg)("code",null,"validDialog")," method of\n",(0,r.yg)("inlineCode",{parentName:"p"},"<Plugins Directory>\\src\\main\\java\\<Maven Group Id>\\smartview\\<Plugin Name>\\dialogs\\<Dialog Name>.java"),","),(0,r.yg)("code",null,"form_mode")," attribute could be set for ",(0,r.yg)("code",null,"result")," XmlNode before returning it.",(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'public class SomeDialog extends AbstractDialog implements ID2Dialog {\n    ...\n    @Override\n    public XmlNode validDialog(D2fsContext context) throws Exception {\n        ...\n        XmlNode result = super.validDialog(context);\n\n        // Custom logic to determine formMode at run time\n        String formMode = 1 == 0 ? "read" : "create";\n        \n        result.setAttribute("form_mode", formMode);\n        \n        return result;\n    }\n    ...    \n}\n')),(0,r.yg)("p",null,"The ",(0,r.yg)("code",null,"form_mode")," attribute for chained dialog could also be set from ",(0,r.yg)("code",null,"validDialog")," method of\n",(0,r.yg)("inlineCode",{parentName:"p"},"<Plugins Directory>\\src\\main\\java\\com\\opentext\\d2\\smartview\\webfs\\dialog\\D2DialogServicePlugin.java"),"\nbefore returning the dialog."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},'public class D2DialogServicePlugin extends D2DialogService implements ID2fsPlugin {\n    ...\n    public Dialog validDialog(Context context, String id, String dialogName, List<Attribute> parameters) throws Exception {\n        \n        // Custom logic\n        \n        Dialog dialog = super.validDialog(context, id, dialogName, parameters);\n        \n        XmlNode xmlDialog = XmlUtil.loadFromString(dialog.getXmlContent()).getRootXmlNode();\n        \n        // Custom logic to determine formMode at run time\n        String formMode = 1 == 0 ? "read" : "create";\n        \n        xmlDialog.setAttribute("form_mode", formMode);\n        \n        dialog.setXmlContent(xmlDialog.toString());\n\n        return dialog;\n    }\n    ...\n}\n')))}c.isMDXComponent=!0}}]);