"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[4695],{5680:(e,t,o)=>{o.d(t,{xA:()=>s,yg:()=>m});var l=o(6540);function a(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function n(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,l)}return o}function d(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?n(Object(o),!0).forEach((function(t){a(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):n(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function r(e,t){if(null==e)return{};var o,l,a=function(e,t){if(null==e)return{};var o,l,a={},n=Object.keys(e);for(l=0;l<n.length;l++)o=n[l],t.indexOf(o)>=0||(a[o]=e[o]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(l=0;l<n.length;l++)o=n[l],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var i=l.createContext({}),g=function(e){var t=l.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):d(d({},t),e)),o},s=function(e){var t=g(e.components);return l.createElement(i.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},y=l.forwardRef((function(e,t){var o=e.components,a=e.mdxType,n=e.originalType,i=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),u=g(o),y=a,m=u["".concat(i,".").concat(y)]||u[y]||c[y]||n;return o?l.createElement(m,d(d({ref:t},s),{},{components:o})):l.createElement(m,d({ref:t},s))}));function m(e,t){var o=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=o.length,d=new Array(n);d[0]=y;var r={};for(var i in t)hasOwnProperty.call(t,i)&&(r[i]=t[i]);r.originalType=e,r[u]="string"==typeof e?e:a,d[1]=r;for(var g=2;g<n;g++)d[g]=o[g];return l.createElement.apply(null,d)}return l.createElement.apply(null,o)}y.displayName="MDXCreateElement"},3592:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>c,frontMatter:()=>n,metadata:()=>r,toc:()=>g});var l=o(8168),a=(o(6540),o(5680));const n={},d=void 0,r={unversionedId:"api/d2/controls/dialogs/generic/d2fs.state.method",id:"api/d2/controls/dialogs/generic/d2fs.state.method",title:"d2fs.state.method",description:"D2FSStateMethod : d2/sdk/controls/dialogs/generic/d2fs.state.method",source:"@site/articles/api/d2/controls/dialogs/generic/d2fs.state.method.md",sourceDirName:"api/d2/controls/dialogs/generic",slug:"/api/d2/controls/dialogs/generic/d2fs.state.method",permalink:"/d2sv-sdk/24.4.0/api/d2/controls/dialogs/generic/d2fs.state.method",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"content.assist.dialog",permalink:"/d2sv-sdk/24.4.0/api/d2/controls/dialogs/content.assist.dialog"},next:{title:"dialog.action",permalink:"/d2sv-sdk/24.4.0/api/d2/controls/dialogs/generic/dialog.action"}},i={},g=[{value:"D2FSStateMethod : <code>d2/sdk/controls/dialogs/generic/d2fs.state.method</code>",id:"d2fsstatemethod--d2sdkcontrolsdialogsgenericd2fsstatemethod",level:2},{value:"d2FSStateMethod.execute(options, result) \u21d2 <code>Promise.&lt;boolean&gt;</code>",id:"d2fsstatemethodexecuteoptions-result--promiseboolean",level:3},{value:"d2FSStateMethod.setDialogContextForm(dialogId, action, currentFormName) \u21d2 <code>void</code>",id:"d2fsstatemethodsetdialogcontextformdialogid-action-currentformname--void",level:3},{value:"d2FSStateMethod.getDialogContextForm(dialogId, action) \u21d2 <code>string</code> | <code>null</code>",id:"d2fsstatemethodgetdialogcontextformdialogid-action--string--null",level:3},{value:"d2FSStateMethod.clearDialogContextForm(dialogId) \u21d2 <code>void</code>",id:"d2fsstatemethodcleardialogcontextformdialogid--void",level:3},{value:"d2FSStateMethod.getDialogAdditonalParams(options) \u21d2 <code>object</code>",id:"d2fsstatemethodgetdialogadditonalparamsoptions--object",level:3},{value:"d2FSStateMethod.extractMergeableFormDataFromResponse(success) \u21d2 <code>object</code>",id:"d2fsstatemethodextractmergeableformdatafromresponsesuccess--object",level:3}],s={toc:g},u="wrapper";function c(e){let{components:t,...o}=e;return(0,a.yg)(u,(0,l.A)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("a",{name:"module_D2FSStateMethod"}),(0,a.yg)("h2",{id:"d2fsstatemethod--d2sdkcontrolsdialogsgenericd2fsstatemethod"},"D2FSStateMethod : ",(0,a.yg)("code",null,"d2/sdk/controls/dialogs/generic/d2fs.state.method")),(0,a.yg)("p",null,"D2FSStateMethod. A default, contextful implementation of state methods that makes it possible to retrieve and transition through\ndifferent states of D2FS dialogs. To customize the default implementation with lesser amount of coding, this class can\nbe extended into scenario specific subclass and added to state methods collection by means of extension with proper binding rules."),(0,a.yg)("p",null,"Also see ",(0,a.yg)("a",{parentName:"p",href:"./dialog.state.methods"},"DialogStateMethods")),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Extends"),": ",(0,a.yg)("a",{parentName:"p",href:"./dialog.state.method"},(0,a.yg)("code",null,"DialogStateMethod")),"  "),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod"},"D2FSStateMethod")," : ",(0,a.yg)("code",null,"d2/sdk/controls/dialogs/generic/d2fs.state.method"),(0,a.yg)("ul",{parentName:"li"},(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod+execute"},".execute(options, result)")," \u21d2 ",(0,a.yg)("code",null,"Promise.","<","boolean",">")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod+setDialogContextForm"},".setDialogContextForm(dialogId, action, currentFormName)")," \u21d2 ",(0,a.yg)("code",null,"void")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod+getDialogContextForm"},".getDialogContextForm(dialogId, action)")," \u21d2 ",(0,a.yg)("code",null,"string")," ","|"," ",(0,a.yg)("code",null,"null")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod+clearDialogContextForm"},".clearDialogContextForm(dialogId)")," \u21d2 ",(0,a.yg)("code",null,"void")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod+getDialogAdditonalParams"},".getDialogAdditonalParams(options)")," \u21d2 ",(0,a.yg)("code",null,"object")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"#module_D2FSStateMethod+extractMergeableFormDataFromResponse"},".extractMergeableFormDataFromResponse(success)")," \u21d2 ",(0,a.yg)("code",null,"object"))))),(0,a.yg)("a",{name:"module_D2FSStateMethod+execute"}),(0,a.yg)("h3",{id:"d2fsstatemethodexecuteoptions-result--promiseboolean"},"d2FSStateMethod.execute(options, result) \u21d2 ",(0,a.yg)("code",null,"Promise.","<","boolean",">")),(0,a.yg)("p",null,"Implements contextful state transition logic for D2FS dialog."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,a.yg)("a",{parentName:"p",href:"#module_D2FSStateMethod"},(0,a.yg)("code",null,"D2FSStateMethod")),(0,a.yg)("br",{parentName:"p"}),"\n",(0,a.yg)("strong",{parentName:"p"},"Returns"),": ",(0,a.yg)("code",null,"Promise.","<","boolean",">")," - Resolve with ",(0,a.yg)("inlineCode",{parentName:"p"},"false")," to stop executing any other matching state methods that are supposed to execute after it.  "),(0,a.yg)("table",null,(0,a.yg)("thead",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Param"),(0,a.yg)("th",null,"Type"),(0,a.yg)("th",null,"Description"))),(0,a.yg)("tbody",null,(0,a.yg)("tr",null,(0,a.yg)("td",null,"options"),(0,a.yg)("td",null,(0,a.yg)("code",null,"MethodMetadata")),(0,a.yg)("td",null,(0,a.yg)("p",null,"holder for various current state related metadata"))),(0,a.yg)("tr",null,(0,a.yg)("td",null,"result"),(0,a.yg)("td",null,(0,a.yg)("code",null,"OutputFormData")),(0,a.yg)("td",null,(0,a.yg)("p",null,"Output parameter, should be filled in with metadata pertaining to next possible state of the dialog."))),"  ")),(0,a.yg)("a",{name:"module_D2FSStateMethod+setDialogContextForm"}),(0,a.yg)("h3",{id:"d2fsstatemethodsetdialogcontextformdialogid-action-currentformname--void"},"d2FSStateMethod.setDialogContextForm(dialogId, action, currentFormName) \u21d2 ",(0,a.yg)("code",null,"void")),(0,a.yg)("p",null,"Set the context before applying this method to current state of the dialog."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,a.yg)("a",{parentName:"p",href:"#module_D2FSStateMethod"},(0,a.yg)("code",null,"D2FSStateMethod")),"  "),(0,a.yg)("table",null,(0,a.yg)("thead",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Param"),(0,a.yg)("th",null,"Type"),(0,a.yg)("th",null,"Description"))),(0,a.yg)("tbody",null,(0,a.yg)("tr",null,(0,a.yg)("td",null,"dialogId"),(0,a.yg)("td",null,(0,a.yg)("code",null,"string")),(0,a.yg)("td",null,(0,a.yg)("p",null,"A unique identifier associated with current dialog."))),(0,a.yg)("tr",null,(0,a.yg)("td",null,"action"),(0,a.yg)("td",null,(0,a.yg)("code",null,"string")),(0,a.yg)("td",null,(0,a.yg)("p",null,"Name of the method getting applied"))),(0,a.yg)("tr",null,(0,a.yg)("td",null,"currentFormName"),(0,a.yg)("td",null,(0,a.yg)("code",null,"string")),(0,a.yg)("td",null,(0,a.yg)("p",null,"Present state's metadata name for the dialog."))),"  ")),(0,a.yg)("a",{name:"module_D2FSStateMethod+getDialogContextForm"}),(0,a.yg)("h3",{id:"d2fsstatemethodgetdialogcontextformdialogid-action--string--null"},"d2FSStateMethod.getDialogContextForm(dialogId, action) \u21d2 ",(0,a.yg)("code",null,"string")," ","|"," ",(0,a.yg)("code",null,"null")),(0,a.yg)("p",null,"Get context before applying this method to current state of the dialog."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,a.yg)("a",{parentName:"p",href:"#module_D2FSStateMethod"},(0,a.yg)("code",null,"D2FSStateMethod")),(0,a.yg)("br",{parentName:"p"}),"\n",(0,a.yg)("strong",{parentName:"p"},"Returns"),": ",(0,a.yg)("code",null,"string")," ","|"," ",(0,a.yg)("code",null,"null")," - Should return contextual state name, however can return ",(0,a.yg)("inlineCode",{parentName:"p"},"null")," to implement a contextless flow.  "),(0,a.yg)("table",null,(0,a.yg)("thead",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Param"),(0,a.yg)("th",null,"Type"),(0,a.yg)("th",null,"Description"))),(0,a.yg)("tbody",null,(0,a.yg)("tr",null,(0,a.yg)("td",null,"dialogId"),(0,a.yg)("td",null,(0,a.yg)("code",null,"string")),(0,a.yg)("td",null,(0,a.yg)("p",null,"A unique identifier associated with current dialog."))),(0,a.yg)("tr",null,(0,a.yg)("td",null,"action"),(0,a.yg)("td",null,(0,a.yg)("code",null,"string")),(0,a.yg)("td",null,(0,a.yg)("p",null,"Name of the method about to be applied."))),"  ")),(0,a.yg)("a",{name:"module_D2FSStateMethod+clearDialogContextForm"}),(0,a.yg)("h3",{id:"d2fsstatemethodcleardialogcontextformdialogid--void"},"d2FSStateMethod.clearDialogContextForm(dialogId) \u21d2 ",(0,a.yg)("code",null,"void")),(0,a.yg)("p",null,"Clears context for given dialog when the dialog has reached a terminal state."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,a.yg)("a",{parentName:"p",href:"#module_D2FSStateMethod"},(0,a.yg)("code",null,"D2FSStateMethod")),"  "),(0,a.yg)("table",null,(0,a.yg)("thead",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Param"),(0,a.yg)("th",null,"Type"),(0,a.yg)("th",null,"Description"))),(0,a.yg)("tbody",null,(0,a.yg)("tr",null,(0,a.yg)("td",null,"dialogId"),(0,a.yg)("td",null,(0,a.yg)("code",null,"string")),(0,a.yg)("td",null,(0,a.yg)("p",null,"A unique identifier associated with current dialog."))),"  ")),(0,a.yg)("a",{name:"module_D2FSStateMethod+getDialogAdditonalParams"}),(0,a.yg)("h3",{id:"d2fsstatemethodgetdialogadditonalparamsoptions--object"},"d2FSStateMethod.getDialogAdditonalParams(options) \u21d2 ",(0,a.yg)("code",null,"object")),(0,a.yg)("p",null,"Prepares the set of attributes (key-value pairs) to be sent to Backend(REST-API) as additional attributes"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,a.yg)("a",{parentName:"p",href:"#module_D2FSStateMethod"},(0,a.yg)("code",null,"D2FSStateMethod")),(0,a.yg)("br",{parentName:"p"}),"\n",(0,a.yg)("strong",{parentName:"p"},"Returns"),": ",(0,a.yg)("code",null,"object")," - Should return a simple JSON object having key-value pairs. All the members of this object is serialized as additional parameter before they are sent to Backend.  "),(0,a.yg)("table",null,(0,a.yg)("thead",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Param"),(0,a.yg)("th",null,"Type"),(0,a.yg)("th",null,"Description"))),(0,a.yg)("tbody",null,(0,a.yg)("tr",null,(0,a.yg)("td",null,"options"),(0,a.yg)("td",null,(0,a.yg)("code",null,"MethodMetadata")),(0,a.yg)("td",null,(0,a.yg)("p",null,"holder for various current state related metadata. It is the same ",(0,a.yg)("code",null,"options")," parameter passed to ",(0,a.yg)("code",null,"execute()"),"."))),"  ")),(0,a.yg)("a",{name:"module_D2FSStateMethod+extractMergeableFormDataFromResponse"}),(0,a.yg)("h3",{id:"d2fsstatemethodextractmergeableformdatafromresponsesuccess--object"},"d2FSStateMethod.extractMergeableFormDataFromResponse(success) \u21d2 ",(0,a.yg)("code",null,"object")),(0,a.yg)("p",null,"Extracts flow-back properties from the ",(0,a.yg)("inlineCode",{parentName:"p"},"success")," response of a Backend(REST-API) method execution such that those properties are saved as part of the input form data."),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,a.yg)("a",{parentName:"p",href:"#module_D2FSStateMethod"},(0,a.yg)("code",null,"D2FSStateMethod")),(0,a.yg)("br",{parentName:"p"}),"\n",(0,a.yg)("strong",{parentName:"p"},"Returns"),": ",(0,a.yg)("code",null,"object")," - Should return a simple JSON object having key-value pairs. The members of the object is merged onto the same input form data that was earlier passed to Backend.  "),(0,a.yg)("table",null,(0,a.yg)("thead",null,(0,a.yg)("tr",null,(0,a.yg)("th",null,"Param"),(0,a.yg)("th",null,"Type"),(0,a.yg)("th",null,"Description"))),(0,a.yg)("tbody",null,(0,a.yg)("tr",null,(0,a.yg)("td",null,"success"),(0,a.yg)("td",null,(0,a.yg)("code",null,"object")),(0,a.yg)("td",null,(0,a.yg)("p",null,"JSON converted success response received after Backend invocation."))),"  ")))}c.isMDXComponent=!0}}]);