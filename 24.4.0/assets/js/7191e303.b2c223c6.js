"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[6646],{5680:(e,n,o)=>{o.d(n,{xA:()=>g,yg:()=>y});var t=o(6540);function l(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function s(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function r(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?s(Object(o),!0).forEach((function(n){l(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function d(e,n){if(null==e)return{};var o,t,l=function(e,n){if(null==e)return{};var o,t,l={},s=Object.keys(e);for(t=0;t<s.length;t++)o=s[t],n.indexOf(o)>=0||(l[o]=e[o]);return l}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)o=s[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var a=t.createContext({}),i=function(e){var n=t.useContext(a),o=n;return e&&(o="function"==typeof e?e(n):r(r({},n),e)),o},g=function(e){var n=i(e.components);return t.createElement(a.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},p=t.forwardRef((function(e,n){var o=e.components,l=e.mdxType,s=e.originalType,a=e.parentName,g=d(e,["components","mdxType","originalType","parentName"]),m=i(o),p=l,y=m["".concat(a,".").concat(p)]||m[p]||u[p]||s;return o?t.createElement(y,r(r({ref:n},g),{},{components:o})):t.createElement(y,r({ref:n},g))}));function y(e,n){var o=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var s=o.length,r=new Array(s);r[0]=p;var d={};for(var a in n)hasOwnProperty.call(n,a)&&(d[a]=n[a]);d.originalType=e,d[m]="string"==typeof e?e:l,r[1]=d;for(var i=2;i<s;i++)r[i]=o[i];return t.createElement.apply(null,r)}return t.createElement.apply(null,o)}p.displayName="MDXCreateElement"},4234:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>i});var t=o(8168),l=(o(6540),o(5680));const s={},r=void 0,d={unversionedId:"api/d2/commands/progressive.nodes.command",id:"api/d2/commands/progressive.nodes.command",title:"progressive.nodes.command",description:"ProgressiveNodesCommand : d2/sdk/commands/progressive.nodes.command",source:"@site/articles/api/d2/commands/progressive.nodes.command.md",sourceDirName:"api/d2/commands",slug:"/api/d2/commands/progressive.nodes.command",permalink:"/d2sv-sdk/24.4.0/api/d2/commands/progressive.nodes.command",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"node.actions.rules",permalink:"/d2sv-sdk/24.4.0/api/d2/commands/node.actions.rules"},next:{title:"action.icons",permalink:"/d2sv-sdk/24.4.0/api/d2/controls/action.icons/"}},a={},i=[{value:"ProgressiveNodesCommand : <code>d2/sdk/commands/progressive.nodes.command</code>",id:"progressivenodescommand--d2sdkcommandsprogressivenodescommand",level:2},{value:"<em>progressiveNodesCommand.preProcess(status, options) \u21d2 <code>PromiseReturnType</code></em>",id:"progressivenodescommandpreprocessstatus-options--codepromisereturntypecode",level:3},{value:"<em>progressiveNodesCommand.doAction(node, options) \u21d2 <code>PromiseReturnType</code></em>",id:"progressivenodescommanddoactionnode-options--codepromisereturntypecode",level:3},{value:"<em>progressiveNodesCommand.handleResults(results, options) \u21d2 <code>PromiseReturnType</code></em>",id:"progressivenodescommandhandleresultsresults-options--codepromisereturntypecode",level:3},{value:"<em>progressiveNodesCommand.getMessageOptions(options) \u21d2 <code>MessageOptionsType</code></em>",id:"progressivenodescommandgetmessageoptionsoptions--codemessageoptionstypecode",level:3},{value:"ProgressiveNodesCommand.extend(protoProperties, staticProperties) \u21d2 <code>function</code>",id:"progressivenodescommandextendprotoproperties-staticproperties--function",level:3},{value:"ProgressiveNodesCommand~DoneCommandOption : <code>Object</code>",id:"progressivenodescommanddonecommandoption--object",level:3},{value:"ProgressiveNodesCommand~CommandStatus : <code>Object</code>",id:"progressivenodescommandcommandstatus--object",level:3},{value:"ProgressiveNodesCommand~PromiseReturnType : <code>jQuery.Promise</code>",id:"progressivenodescommandpromisereturntype--jquerypromise",level:3},{value:"ProgressiveNodesCommand~MessageOptionsType : <code>Object</code>",id:"progressivenodescommandmessageoptionstype--object",level:3}],g={toc:i},m="wrapper";function u(e){let{components:n,...o}=e;return(0,l.yg)(m,(0,t.A)({},g,o,{components:n,mdxType:"MDXLayout"}),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand"}),(0,l.yg)("h2",{id:"progressivenodescommand--d2sdkcommandsprogressivenodescommand"},"ProgressiveNodesCommand : ",(0,l.yg)("code",null,"d2/sdk/commands/progressive.nodes.command")),(0,l.yg)("p",null,"Interface for classes that implements business actions over one or more ",(0,l.yg)("a",{parentName:"p",href:"../models/node.model"},"NodeModel")," such that\nprogress of the action is collectively portrayed on a UI component called ProgressPanel."),(0,l.yg)("p",null,"Normal behavior flow is as follows:"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},"The progress panel is displayed, and progress gets updated based on the completion of individual node processing."),(0,l.yg)("li",{parentName:"ol"},"In case the processing for any node fails, or if user aborts the processing (either using ",(0,l.yg)("em",{parentName:"li"},"Stop")," button for all pending items, or using Cancel icon against each item), or if ",(0,l.yg)("inlineCode",{parentName:"li"},"doneCommand")," options are enabled and there are multiple nodes and at least one node is not within the ",(0,l.yg)("inlineCode",{parentName:"li"},"commandContainer"),", then the progress panel will remain visible after all processing is complete. User can expand it to see individual item status."),(0,l.yg)("li",{parentName:"ol"},"In case the processing is successful, then progress panel is removed, and toast message is displayed with success details. If it was a single node and ",(0,l.yg)("inlineCode",{parentName:"li"},"doneCommand")," was applicable, then the toast message will also include done command link.")),(0,l.yg)("p",null,"An implementation should be registered with the command collection."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Extends"),": ",(0,l.yg)("a",{parentName:"p",href:"./command"},(0,l.yg)("code",null,"CommandModel")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Example")," ",(0,l.yg)("em",{parentName:"p"},"(A sample implementation delete.js could look like)"),"  "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},"define([\n   'nuc/lib/jquery',\n   'd2/sdk/commands/progressive.nodes.command',\n   'i18n!mybundle/commands/commands.lang'\n], function($, ProgressiveNodesCommand, lang){\n   var DeleteCommand = ProgressiveNodesCommand.extend({\n     defaults: {\n       signature: 'Delete',\n       command_key: 'Delete',\n       name: lang.CommandNameDelete,\n       pageLeavingWarning: lang.DeletePageLeavingWarning,\n       scope: 'multiple'\n     },\n\n     preProcess: function (status, options) {\n       options || (options = {});\n       var me = this,\n       deferred = $.Deferred();\n\n       // Do something...\n\n       me._confirmAction(status, options).done(function (deleteOptions) {\n         options.deleteOptions = deleteOptions;\n         deferred.resolve();\n       }).fail(function () {\n         deferred.reject();\n       });\n\n       return deferred.promise();\n    },\n\n    doAction: function (node, options) {\n       var deferred = $.Deferred();\n       node.destroy({\n         wait: true,\n         deleteOptions: options.deleteOptions,\n         container: options.container\n       }).done(function () {\n         deferred.resolve(node);\n       }).fail(deferred.reject);\n\n       return deferred.promise();\n     },\n\n     handleResults: function (results, options) {\n       var sourceCollection = options.originatingView && options.originatingView.collection,\n       deletedIds = _.compact(_.map(results || [], function (result) {\n         if (result instanceof Backbone.Model) {\n           return result.get('id');\n         }\n       }));\n\n       if (deletedIds.length > 0) {\n         options.context.trigger('d2:objects:deleted', deletedIds);\n       }\n\n       return sourceCollection.fetch({reload: true});\n     },\n\n     getMessageOptions: function () {\n       return {\n         oneFilePending: lang.DeletingOneItem,\n         multiFilePending: lang.DeletingManyItems,\n         oneFileSuccess: lang.DeleteOneItemSuccessMessage,\n         multiFileSuccess: lang.DeleteManyItemsSuccessMessage,\n         oneFileFailure: lang.DeleteOneItemFailMessage,\n         multiFileOneFailure: lang.DeleteManyItemsOneFailMessage,\n         multiFileFailure: lang.DeleteManyItemsFailMessage,\n         someItemsStopped: lang.DeleteStopped,\n         actionType: 'DELETE'\n       };\n     },\n\n     // Other methods...\n   });\n});\n")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Example")," ",(0,l.yg)("em",{parentName:"p"},"( to register the command with command collection, in extension.json )"),"  "),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-js"},'{\n  "d2/sdk/utils/commands": {\n     "extensions": {\n       "mybundle": {\n         "mybundle/commands/delete"\n       }\n     }\n   }\n}\n')),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#module_ProgressiveNodesCommand"},"ProgressiveNodesCommand")," : ",(0,l.yg)("code",null,"d2/sdk/commands/progressive.nodes.command"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},"instance"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},(0,l.yg)("a",{parentName:"em",href:"#module_ProgressiveNodesCommand+preProcess"},".preProcess(status, options)")," \u21d2 ",(0,l.yg)("code",null,"PromiseReturnType"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},(0,l.yg)("a",{parentName:"em",href:"#module_ProgressiveNodesCommand+doAction"},".doAction(node, options)")," \u21d2 ",(0,l.yg)("code",null,"PromiseReturnType"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},(0,l.yg)("a",{parentName:"em",href:"#module_ProgressiveNodesCommand+handleResults"},".handleResults(results, options)")," \u21d2 ",(0,l.yg)("code",null,"PromiseReturnType"))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},(0,l.yg)("a",{parentName:"em",href:"#module_ProgressiveNodesCommand+getMessageOptions"},".getMessageOptions(options)")," \u21d2 ",(0,l.yg)("code",null,"MessageOptionsType"))))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},"static"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#module_ProgressiveNodesCommand.extend"},".extend(protoProperties, staticProperties)")," \u21d2 ",(0,l.yg)("code",null,"function")))),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("em",{parentName:"li"},"inner"),(0,l.yg)("ul",{parentName:"li"},(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#module_ProgressiveNodesCommand..DoneCommandOption"},"~DoneCommandOption")," : ",(0,l.yg)("code",null,"Object")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#module_ProgressiveNodesCommand..CommandStatus"},"~CommandStatus")," : ",(0,l.yg)("code",null,"Object")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#module_ProgressiveNodesCommand..PromiseReturnType"},"~PromiseReturnType")," : ",(0,l.yg)("code",null,"jQuery.Promise")),(0,l.yg)("li",{parentName:"ul"},(0,l.yg)("a",{parentName:"li",href:"#module_ProgressiveNodesCommand..MessageOptionsType"},"~MessageOptionsType")," : ",(0,l.yg)("code",null,"Object"))))))),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand+preProcess"}),(0,l.yg)("h3",{id:"progressivenodescommandpreprocessstatus-options--codepromisereturntypecode"},(0,l.yg)("em",{parentName:"h3"},"progressiveNodesCommand.preProcess(status, options) \u21d2 ",(0,l.yg)("code",null,"PromiseReturnType"))),(0,l.yg)("p",null,"Apply a preprocessing logic before starting off the actual business action to any node"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance abstract method of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"See"),": ",(0,l.yg)("a",{parentName:"p",href:"external:CommandModel#execute"},"CommandModel#execute"),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Param"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"status"),(0,l.yg)("td",null,(0,l.yg)("code",null,"CommandStatus")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Object hash containing the contextual data"))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"options"),(0,l.yg)("td",null,(0,l.yg)("code",null,"object")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Additional options that are not part of contextual data like settings"))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand+doAction"}),(0,l.yg)("h3",{id:"progressivenodescommanddoactionnode-options--codepromisereturntypecode"},(0,l.yg)("em",{parentName:"h3"},"progressiveNodesCommand.doAction(node, options) \u21d2 ",(0,l.yg)("code",null,"PromiseReturnType"))),(0,l.yg)("p",null,"Execute the business action on a single ",(0,l.yg)("inlineCode",{parentName:"p"},"node")," from within the ",(0,l.yg)("inlineCode",{parentName:"p"},"status.nodes")," of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand+preProcess"},"preProcess")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance abstract method of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Param"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"node"),(0,l.yg)("td",null,(0,l.yg)("code",null,"NodeModel")),(0,l.yg)("td",null,(0,l.yg)("p",null,"The current NodeModel being processed"))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"options"),(0,l.yg)("td",null,(0,l.yg)("code",null,"object")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Combined ",(0,l.yg)("code",null,"status")," and ",(0,l.yg)("code",null,"options")," from ",(0,l.yg)("a",{href:"#module_ProgressiveNodesCommand+preProcess"},"preProcess")))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand+handleResults"}),(0,l.yg)("h3",{id:"progressivenodescommandhandleresultsresults-options--codepromisereturntypecode"},(0,l.yg)("em",{parentName:"h3"},"progressiveNodesCommand.handleResults(results, options) \u21d2 ",(0,l.yg)("code",null,"PromiseReturnType"))),(0,l.yg)("p",null,"Apply post processing"),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance abstract method of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Param"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"results"),(0,l.yg)("td",null,(0,l.yg)("code",null,"Array.<object>")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Elements of the argument correspond to each input node. The element is of type ",(0,l.yg)("code",null,"NodeModel")," if the command execution for this node was successful. It is ",(0,l.yg)("code",null,"undefined")," if the command execution was aborted. In case of failure the type depends on whatever type was used to ",(0,l.yg)("code",null,"reject()")," the associated ",(0,l.yg)("code",null,"jQuery.Promise")," from ",(0,l.yg)("a",{href:"#module_ProgressiveNodesCommand+doAction"},"doAction")))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"options"),(0,l.yg)("td",null,(0,l.yg)("code",null,"object")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Combined ",(0,l.yg)("code",null,"status")," and ",(0,l.yg)("code",null,"options")," from ",(0,l.yg)("a",{href:"#module_ProgressiveNodesCommand+preProcess"},"preProcess")))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand+getMessageOptions"}),(0,l.yg)("h3",{id:"progressivenodescommandgetmessageoptionsoptions--codemessageoptionstypecode"},(0,l.yg)("em",{parentName:"h3"},"progressiveNodesCommand.getMessageOptions(options) \u21d2 ",(0,l.yg)("code",null,"MessageOptionsType"))),(0,l.yg)("p",null,"Customize different messages shown in the progress panel UI."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": instance abstract method of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),"  "),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Param"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"options"),(0,l.yg)("td",null,(0,l.yg)("code",null,"object")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Combined ",(0,l.yg)("code",null,"status")," and ",(0,l.yg)("code",null,"options")," from ",(0,l.yg)("a",{href:"#module_ProgressiveNodesCommand+preProcess"},"preProcess")))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand.extend"}),(0,l.yg)("h3",{id:"progressivenodescommandextendprotoproperties-staticproperties--function"},"ProgressiveNodesCommand.extend(protoProperties, staticProperties) \u21d2 ",(0,l.yg)("code",null,"function")),(0,l.yg)("p",null,"To define a derived type from ",(0,l.yg)("inlineCode",{parentName:"p"},"ProgressiveNodesCommand"),"."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Returns"),": ",(0,l.yg)("code",null,"function")," - The derived type.  "),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Param"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"protoProperties"),(0,l.yg)("td",null,(0,l.yg)("code",null,"object")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Properties attached to the prototype of derived type."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"protoProperties.constructor"),(0,l.yg)("td",null,(0,l.yg)("code",null,"function")),(0,l.yg)("td",null,(0,l.yg)("p",null,"The function to be used to construct instance of the derived type."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"staticProperties"),(0,l.yg)("td",null,(0,l.yg)("code",null,"object")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Properties statically attached to the derived type."))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand..DoneCommandOption"}),(0,l.yg)("h3",{id:"progressivenodescommanddonecommandoption--object"},"ProgressiveNodesCommand~DoneCommandOption : ",(0,l.yg)("code",null,"Object")),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Properties")),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Name"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"signature"),(0,l.yg)("td",null,(0,l.yg)("code",null,"string")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Signature of command to execute on click"))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"label"),(0,l.yg)("td",null,(0,l.yg)("code",null,"string")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Label to be shown for the link."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"tooltip"),(0,l.yg)("td",null,(0,l.yg)("code",null,"string")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Tooltip for the link."))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand..CommandStatus"}),(0,l.yg)("h3",{id:"progressivenodescommandcommandstatus--object"},"ProgressiveNodesCommand~CommandStatus : ",(0,l.yg)("code",null,"Object")),(0,l.yg)("p",null,"Type of data passed as first argument for any command execution."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Properties")),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Name"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Default"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"[hideSuccessMessage]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"boolean")),(0,l.yg)("td",null,(0,l.yg)("code",null,"false")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Setting it to ",(0,l.yg)("code",null,"true")," suppresses display of a success toast when this command execution completes successfully."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[hideFailureMessage]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"boolean")),(0,l.yg)("td",null,(0,l.yg)("code",null,"false")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Setting it to ",(0,l.yg)("code",null,"true")," suppresses display of any error toast even if the command completes with error."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[suppressProgress]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"boolean")),(0,l.yg)("td",null,(0,l.yg)("code",null,"false")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Setting it to ",(0,l.yg)("code",null,"true")," hides the progress panel UI."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[doneCommand]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"DoneCommandOption")),(0,l.yg)("td",null),(0,l.yg)("td",null,(0,l.yg)("p",null,"To show additional link on the success toast message upon command completion."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[commandContainer]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"NodeModel")),(0,l.yg)("td",null),(0,l.yg)("td",null,(0,l.yg)("p",null,"This must be provided if ",(0,l.yg)("code",null,"doneCommand")," link has to be shown. The link is displayed if given node is not within this container."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"nodes"),(0,l.yg)("td",null,(0,l.yg)("code",null,"NodeCollection")),(0,l.yg)("td",null),(0,l.yg)("td",null,(0,l.yg)("p",null,"Instance of ",(0,l.yg)("a",{href:"../models/node.collection"},"NodeCollection"),", on which node object(s) this command is being executed."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[context]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"Context")),(0,l.yg)("td",null),(0,l.yg)("td",null,(0,l.yg)("p",null,"Active application context"))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[toolitem]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"ToolitemModel")),(0,l.yg)("td",null),(0,l.yg)("td",null,(0,l.yg)("p",null,"The menu behind this action, if any."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"[originatingView]"),(0,l.yg)("td",null,(0,l.yg)("code",null,"Marionette.View")),(0,l.yg)("td",null),(0,l.yg)("td",null,(0,l.yg)("p",null,"The associated UI component where this command is being executed."))),"  ")),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand..PromiseReturnType"}),(0,l.yg)("h3",{id:"progressivenodescommandpromisereturntype--jquerypromise"},"ProgressiveNodesCommand~PromiseReturnType : ",(0,l.yg)("code",null,"jQuery.Promise")),(0,l.yg)("p",null,"Return type. Associated ",(0,l.yg)("inlineCode",{parentName:"p"},"jQuery.Promise")," instance should be ",(0,l.yg)("inlineCode",{parentName:"p"},"resolve()"),"-ed or ",(0,l.yg)("inlineCode",{parentName:"p"},"reject()"),"-ed to mark either successful completion or failed completion respectively."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),"  "),(0,l.yg)("a",{name:"module_ProgressiveNodesCommand..MessageOptionsType"}),(0,l.yg)("h3",{id:"progressivenodescommandmessageoptionstype--object"},"ProgressiveNodesCommand~MessageOptionsType : ",(0,l.yg)("code",null,"Object")),(0,l.yg)("p",null,"Formattable message to be used in progress panel."),(0,l.yg)("p",null,(0,l.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,l.yg)("a",{parentName:"p",href:"#module_ProgressiveNodesCommand"},(0,l.yg)("code",null,"ProgressiveNodesCommand")),(0,l.yg)("br",{parentName:"p"}),"\n",(0,l.yg)("strong",{parentName:"p"},"Properties")),(0,l.yg)("table",null,(0,l.yg)("thead",null,(0,l.yg)("tr",null,(0,l.yg)("th",null,"Name"),(0,l.yg)("th",null,"Type"),(0,l.yg)("th",null,"Description"))),(0,l.yg)("tbody",null,(0,l.yg)("tr",null,(0,l.yg)("td",null,"oneFilePending"),(0,l.yg)("td",null,(0,l.yg)("code",null,"string")),(0,l.yg)("td",null,(0,l.yg)("p",null,"Message to be shown for ",(0,l.yg)("code",null,"single")," scoped command during processing, {0} is substituted with node name."))),(0,l.yg)("tr",null,(0,l.yg)("td",null,"actionType"),(0,l.yg)("td",null,(0,l.yg)("code",null,"string")),(0,l.yg)("td",null,(0,l.yg)("p",null,"To group several executions of the same command into a single progress panel UI wherever applicable. It is a future scoped option."))),"  ")))}u.isMDXComponent=!0}}]);