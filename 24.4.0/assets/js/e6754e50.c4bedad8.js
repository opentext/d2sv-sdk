"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[6684],{5680:(e,n,t)=>{t.d(n,{xA:()=>u,yg:()=>y});var s=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);n&&(s=s.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,s)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,s,i=function(e,n){if(null==e)return{};var t,s,i={},o=Object.keys(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(s=0;s<o.length;s++)t=o[s],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=s.createContext({}),d=function(e){var n=s.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=d(e.components);return s.createElement(l.Provider,{value:n},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return s.createElement(s.Fragment,{},n)}},g=s.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),c=d(t),g=i,y=c["".concat(l,".").concat(g)]||c[g]||p[g]||o;return t?s.createElement(y,a(a({ref:n},u),{},{components:t})):s.createElement(y,a({ref:n},u))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=g;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r[c]="string"==typeof e?e:i,a[1]=r;for(var d=2;d<o;d++)a[d]=t[d];return s.createElement.apply(null,a)}return s.createElement.apply(null,t)}g.displayName="MDXCreateElement"},9012:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var s=t(8168),i=(t(6540),t(5680));const o={},a=void 0,r={unversionedId:"api/d2/utils/session",id:"api/d2/utils/session",title:"session",description:"Session : d2/sdk/utils/session",source:"@site/articles/api/d2/utils/session.md",sourceDirName:"api/d2/utils",slug:"/api/d2/utils/session",permalink:"/d2sv-sdk/24.4.0/api/d2/utils/session",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"server.query.utils",permalink:"/d2sv-sdk/24.4.0/api/d2/utils/server.query.utils"},next:{title:"common.mock",permalink:"/d2sv-sdk/24.4.0/api/d2/utils/test/common.mock"}},l={},d=[{value:"Session : <code>d2/sdk/utils/session</code>",id:"session--d2sdkutilssession",level:2},{value:"session.isInitialized() \u21d2 <code>Boolean</code>",id:"sessionisinitialized--boolean",level:3},{value:"session.isActive() \u21d2 <code>Boolean</code>",id:"sessionisactive--boolean",level:3},{value:"session.getContext() \u21d2 <code>*</code>",id:"sessiongetcontext--",level:3},{value:"&quot;init&quot;",id:"init",level:3},{value:"&quot;begin&quot;",id:"begin",level:3},{value:"&quot;end&quot;",id:"end",level:3},{value:"Session.get() \u21d2 <code>Session</code>",id:"sessionget--session",level:3}],u={toc:d},c="wrapper";function p(e){let{components:n,...t}=e;return(0,i.yg)(c,(0,s.A)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("a",{name:"module_Session"}),(0,i.yg)("h2",{id:"session--d2sdkutilssession"},"Session : ",(0,i.yg)("code",null,"d2/sdk/utils/session")),(0,i.yg)("p",null,"Session utility. It is a singleton entity in D2SV runtime, used to check state of D2SV session and avail the authenticated connector instance\nassociated with the session.\nCan also return a reference to the application state data holder a.k.a context associated with the D2SV runtime."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Extends"),": ",(0,i.yg)("a",{parentName:"p",href:"https://marionettejs.com/docs/v2.4.7/marionette.object.html"},(0,i.yg)("code",null,"Marionette.Object")),(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"Emits"),": ",(0,i.yg)("a",{parentName:"p",href:"#module_Session+event_init"},(0,i.yg)("code",null,"init")),", ",(0,i.yg)("a",{parentName:"p",href:"#module_Session+event_begin"},(0,i.yg)("code",null,"begin")),", ",(0,i.yg)("a",{parentName:"p",href:"#module_Session+event_end"},(0,i.yg)("code",null,"end")),"  "),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session"},"Session")," : ",(0,i.yg)("code",null,"d2/sdk/utils/session"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"instance"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session+isInitialized"},".isInitialized()")," \u21d2 ",(0,i.yg)("code",null,"Boolean")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session+isActive"},".isActive()")," \u21d2 ",(0,i.yg)("code",null,"Boolean")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session+getContext"},".getContext()")," \u21d2 ",(0,i.yg)("code",null,"*")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session+event_init"},'"init"')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session+event_begin"},'"begin"')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session+event_end"},'"end"')))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("em",{parentName:"li"},"static"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"#module_Session.get"},".get()")," \u21d2 ",(0,i.yg)("code",null,"Session"))))))),(0,i.yg)("a",{name:"module_Session+isInitialized"}),(0,i.yg)("h3",{id:"sessionisinitialized--boolean"},"session.isInitialized() \u21d2 ",(0,i.yg)("code",null,"Boolean")),(0,i.yg)("p",null,"Check if the session is initialized or not. Right after a session object is instantiated, it is put to an un-initialized state.\nThe uninitialized state represents that the session is still setting up context, connector and an appropriate authenticator."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"Returns"),": ",(0,i.yg)("code",null,"Boolean")," - Whether the session is initialized.  "),(0,i.yg)("a",{name:"module_Session+isActive"}),(0,i.yg)("h3",{id:"sessionisactive--boolean"},"session.isActive() \u21d2 ",(0,i.yg)("code",null,"Boolean")),(0,i.yg)("p",null,"Checks if the session is active or not. An ",(0,i.yg)("inlineCode",{parentName:"p"},"initialized")," session automatically tries to validate itself against an authenticated\nconnection. If the validation goes through, then the session becomes an ",(0,i.yg)("inlineCode",{parentName:"p"},"active")," session otherwise it stays ",(0,i.yg)("inlineCode",{parentName:"p"},"inactive")," and waits\nfor the end user to login into D2SV."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"Returns"),": ",(0,i.yg)("code",null,"Boolean")," - Whether the session is active  "),(0,i.yg)("a",{name:"module_Session+getContext"}),(0,i.yg)("h3",{id:"sessiongetcontext--"},"session.getContext() \u21d2 ",(0,i.yg)("code",null,"*")),(0,i.yg)("p",null,"Get a reference to the application data holder associated with this session. The context can be used to create or access\ndata created by different data factories."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"Returns"),": ",(0,i.yg)("code",null,"*")," - Returns the session context.",(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"See"),": ",(0,i.yg)("a",{parentName:"p",href:"./contexts/context.utils#Context"},"Context"),(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"Example")," ",(0,i.yg)("em",{parentName:"p"},"(Code sample to get the connector instance inside any module)"),"  "),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-js"},"\ndefine([\n 'd2/sdk/utils/session',\n 'd2/sdk/utils/contexts/factories/connector',\n 'd2/sdk/models/node.model'\n], function(Session, ConnectorFactory, NodeModel){\n 'use strict';\n\n var context;\n\n function createNodeModel(attributes) {\n   if(!context) {\n     context = Session.get().getContext();\n   }\n   return new NodeModel(attributes, {connector: context.getObject(ConnectorFactory)});\n }\n\n return {\n   cteateNodeModel: createNodeModel\n };\n});\n")),(0,i.yg)("a",{name:"module_Session+event_init"}),(0,i.yg)("h3",{id:"init"},'"init"'),(0,i.yg)("p",null,"Marks the initialization of a session. The event is emitted when the session has created\nits pre-requisite objects and it's ready to check authentication status"),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),"  "),(0,i.yg)("a",{name:"module_Session+event_begin"}),(0,i.yg)("h3",{id:"begin"},'"begin"'),(0,i.yg)("p",null,"Marks the beginning of a session. The event is emitted when session reaches validated state\nafter fresh login or page reload."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),"  "),(0,i.yg)("a",{name:"module_Session+event_end"}),(0,i.yg)("h3",{id:"end"},'"end"'),(0,i.yg)("p",null,"Marks the end of a session. The event is emitted when session couldn't reach a validated state\nafter page reload or the underlying connection authenticator has detected logout or session expiry."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": event emitted by ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),"  "),(0,i.yg)("a",{name:"module_Session.get"}),(0,i.yg)("h3",{id:"sessionget--session"},"Session.get() \u21d2 ",(0,i.yg)("code",null,"Session")),(0,i.yg)("p",null,"Get a reference to the singleton instance."),(0,i.yg)("p",null,(0,i.yg)("strong",{parentName:"p"},"Kind"),": static method of ",(0,i.yg)("a",{parentName:"p",href:"#module_Session"},(0,i.yg)("code",null,"Session")),(0,i.yg)("br",{parentName:"p"}),"\n",(0,i.yg)("strong",{parentName:"p"},"Returns"),": ",(0,i.yg)("code",null,"Session")," - Returns the session instance."))}p.isMDXComponent=!0}}]);