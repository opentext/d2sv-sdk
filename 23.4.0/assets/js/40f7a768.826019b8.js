"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[4028],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var r=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function n(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?n(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):n(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,o=function(e,t){if(null==e)return{};var a,r,o={},n=Object.keys(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(r=0;r<n.length;r++)a=n[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,o=e.mdxType,n=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(a),m=o,h=c["".concat(i,".").concat(m)]||c[m]||d[m]||n;return a?r.createElement(h,s(s({ref:t},u),{},{components:a})):r.createElement(h,s({ref:t},u))}));function h(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var n=a.length,s=new Array(n);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:o,s[1]=l;for(var p=2;p<n;p++)s[p]=a[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},1754:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>p});var r=a(7462),o=(a(7294),a(3905));const n={sidebar_position:1.08,sidebar_label:"Custom Dialog"},s="Custom Dialogs",l={unversionedId:"general/howto/1_08_custom_dialog",id:"general/howto/1_08_custom_dialog",title:"Custom Dialogs",description:"The custom dialog is not a widget but more of a dialog to do a particular business operation.",source:"@site/articles/general/howto/1_08_custom_dialog.md",sourceDirName:"general/howto",slug:"/general/howto/1_08_custom_dialog",permalink:"/d2sv-sdk/23.4.0/general/howto/1_08_custom_dialog",draft:!1,tags:[],version:"current",sidebarPosition:1.08,frontMatter:{sidebar_position:1.08,sidebar_label:"Custom Dialog"},sidebar:"general",previous:{title:"Set form mode for D2FS dialog",permalink:"/d2sv-sdk/23.4.0/general/howto/1_07_assign_form_mode_for_chained_dialogs"},next:{title:"Overview",permalink:"/d2sv-sdk/23.4.0/general/ws_assistant/2_00_ws_overview"}},i={},p=[{value:"What it can crete from workspace assistant",id:"what-it-can-crete-from-workspace-assistant",level:6},{value:"Methods exposed as part of the dialog",id:"methods-exposed-as-part-of-the-dialog",level:6},{value:"How to return Success message",id:"how-to-return-success-message",level:5},{value:"Overriding the default post action behavior",id:"overriding-the-default-post-action-behavior",level:5}],u={toc:p},c="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(c,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-dialogs"},"Custom Dialogs"),(0,o.kt)("p",null,"The custom dialog is not a widget but more of a dialog to do a particular business operation."),(0,o.kt)("h6",{id:"what-it-can-crete-from-workspace-assistant"},"What it can crete from workspace assistant"),(0,o.kt)("p",null,"Using the workspace assistance developer can create custom dialog for the plugins created by the developer."),(0,o.kt)("h6",{id:"methods-exposed-as-part-of-the-dialog"},"Methods exposed as part of the dialog"),(0,o.kt)("p",null,"The custom dialog exposed below three method for building and handling various action of the dialog."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"buildDialog(..)")," : This method is responsible for building the Dialog."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"validDialog(.)"),"  : validdialog is used to either chain to different dialog or to perform a business action and return the success."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"cancelDialog(.)")," :  this method is called when user perform invalid action.")),(0,o.kt)("h5",{id:"how-to-return-success-message"},"How to return Success message"),(0,o.kt)("p",null,"There are 2 types of interactions that can be provided for the success message."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Alert")," : if the developer wants to show an alert message popup post operation.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'       XmlNode result = super.validDialog(context);\n       XmlNode msg = new XmlNodeImpl("message");\n       msg.setValue("Processed Successfully");\n       msg.setAttribute("type", "alert");\n       msg.setAttribute("title", "Success");\n       result.appendXmlNode(msg);\n')),(0,o.kt)("p",null,"*",(0,o.kt)("strong",{parentName:"p"},"Sample Output")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'   "page-content": {\n        "success": {\n            "message": {\n                "type": "alert",\n                "order": 1,\n                "content": "Processed Successfully"\n            }\n        }\n    }\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Toast")," : if the developer wants to show a toast message on top of the screen.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'       XmlNode result = super.validDialog(context);\n       XmlNode msg = new XmlNodeImpl("message");\n       msg.setValue("Processed Successfully");\n       msg.setAttribute("type", "toast");\n       msg.setAttribute("title", "Success");\n       result.appendXmlNode(msg);\n')),(0,o.kt)("p",null,"*",(0,o.kt)("strong",{parentName:"p"},"Sample Output")," :"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'   "page-content": {\n        "success": {\n            "message": {\n                "type": "toast",\n                "order": 1,\n                "content": "Processed Successfully"\n            }\n        }\n    }\n')),(0,o.kt)("p",null,"Where"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"message")," is child node of success, and it is mandatory which is having their content as Value."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"type")," is also a mandatory key which allow either ",(0,o.kt)("inlineCode",{parentName:"li"},"alert/toast")," as value."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"title")," is an optional parameter for the  ",(0,o.kt)("inlineCode",{parentName:"li"},"type='alert'")," which will be displayed as the title for the alert popup.")),(0,o.kt)("h5",{id:"overriding-the-default-post-action-behavior"},"Overriding the default post action behavior"),(0,o.kt)("p",null,"There are basically 3 types of post action that can be performed on the selected objects\nafter the completion of the dialog service operation. Those operation can be set as an attribute\nto the result before the returning in the case of ",(0,o.kt)("strong",{parentName:"p"},"validDialog(.)")," and ",(0,o.kt)("strong",{parentName:"p"},"cancelDialog(.)")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Locate content and refresh state upon action")," :\tThis will locate the object and update the state of the object\nselected. For example, if you are performing some operation which will move the selected object from\none location to another. Then this attribute will help the user to identify where it is located\nas well as refreshing the state of the current container. Attribute used for this is ",(0,o.kt)("inlineCode",{parentName:"li"},"locateAndRefresh")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Refresh state")," : This will refresh the state of the object selected post dialog operation. For example,\nif you have performed a lifecycle operation or a property update as part of the ",(0,o.kt)("strong",{parentName:"li"},"validDialog(.)")," then\nif you want to have the updated menus as well as values  in the selected item in the widget we would need\nto set this value as part fo the result. Attribute used for this is ",(0,o.kt)("inlineCode",{parentName:"li"},"refreshCheckoutState")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("strong",{parentName:"li"},"Refresh widget")," : This will reload the widget post the operation. Attribute used for this is ",(0,o.kt)("inlineCode",{parentName:"li"},"refreshWidget"))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Sample Code")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'       XmlNode result = super.validDialog(context); \n        result.setAttribute("locateAndRefresh", "true"); \n        result.setAttribute("refreshCheckoutState", "true"); \n        result.setAttribute("refreshWidget","true"); \n        return result; \n')),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},'Supported values are "true"/"false".'),(0,o.kt)("li",{parentName:"ol"},"Default value if not set is false."))))}d.isMDXComponent=!0}}]);