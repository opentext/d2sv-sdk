"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[9751],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),m=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=m(e.components);return a.createElement(l.Provider,{value:n},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=m(t),c=i,g=d["".concat(l,".").concat(c)]||d[c]||u[c]||r;return t?a.createElement(g,s(s({ref:n},p),{},{components:t})):a.createElement(g,s({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,s=new Array(r);s[0]=c;var o={};for(var l in n)hasOwnProperty.call(n,l)&&(o[l]=n[l]);o.originalType=e,o[d]="string"==typeof e?e:i,s[1]=o;for(var m=2;m<r;m++)s[m]=t[m];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},5217:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>m});var a=t(7462),i=(t(7294),t(3905));const r={sidebar_position:3.01,sidebar_label:"D2 Admin-Groups Sample"},s="D2 Admin-Groups Sample",o={unversionedId:"general/samples/3_01_admin_groups",id:"general/samples/3_01_admin_groups",title:"D2 Admin-Groups Sample",description:"D2 Smartview does not ship with an Out-Of-The-Box(OOTB) group management widget like D2 Classic. However, the",source:"@site/articles/general/samples/3_01_admin_groups.md",sourceDirName:"general/samples",slug:"/general/samples/3_01_admin_groups",permalink:"/d2sv-sdk/23.4.0/general/samples/3_01_admin_groups",draft:!1,tags:[],version:"current",sidebarPosition:3.01,frontMatter:{sidebar_position:3.01,sidebar_label:"D2 Admin-Groups Sample"},sidebar:"general",previous:{title:"Overview",permalink:"/d2sv-sdk/23.4.0/general/samples/3_00_overview"},next:{title:"D2SV Read-Only Permission View Sample",permalink:"/d2sv-sdk/23.4.0/general/samples/3_04_read_only_permission"}},l={},m=[{value:"Instruction to try out the sample",id:"instruction-to-try-out-the-sample",level:3},{value:"Source code structure",id:"source-code-structure",level:3},{value:"Files and their purpose",id:"files-and-their-purpose",level:4},{value:"REST Controller",id:"rest-controller",level:6},{value:"Group-manage menu configuration in back-end and its display &amp; execution on the front-end",id:"group-manage-menu-configuration-in-back-end-and-its-display--execution-on-the-front-end",level:6},{value:"Tile on the landing page",id:"tile-on-the-landing-page",level:6},{value:"The perspective, landing tile expands into",id:"the-perspective-landing-tile-expands-into",level:6},{value:"The side-panel dialog that manages group member",id:"the-side-panel-dialog-that-manages-group-member",level:6}],p={toc:m},d="wrapper";function u(e){let{components:n,...r}=e;return(0,i.kt)(d,(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"d2-admin-groups-sample"},"D2 Admin-Groups Sample"),(0,i.kt)("p",null,"D2 Smartview does not ship with an Out-Of-The-Box(OOTB) group management widget like D2 Classic. However, the\nD2 Admin-Groups sample plugin fills-in the gap functionally and serves as a complete example of how to use SDK to"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Define a landing page widget tile."),(0,i.kt)("li",{parentName:"ul"},"Define a perspective and stich it up with the landing page widget."),(0,i.kt)("li",{parentName:"ul"},"Define and use a custom menu type to go with the widget."),(0,i.kt)("li",{parentName:"ul"},"Define a few REST endpoints to serve data to the widget.")),(0,i.kt)("h3",{id:"instruction-to-try-out-the-sample"},"Instruction to try out the sample"),(0,i.kt)("p",null,"As this plugin implements a landing page tile as part of it, some configuration changes are required in the D2 Smartview landing page\nbefore the tile is made available for the end users. Here are the list of steps required to completely deploy and configure this plugin."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Build the plugin using ",(0,i.kt)("inlineCode",{parentName:"li"},"npm run build")," from SDK workspace root."),(0,i.kt)("li",{parentName:"ul"},"Copy ",(0,i.kt)("inlineCode",{parentName:"li"},"D2-AdminGroups-1.0.0.jar")," from 'dist' folder in workspace root and paste it inside ",(0,i.kt)("inlineCode",{parentName:"li"},"WEB-INF/lib")," folder of a deployed D2 Smartview application."),(0,i.kt)("li",{parentName:"ul"},"Restart application server on which D2 Smartview is deployed."),(0,i.kt)("li",{parentName:"ul"},"Open D2-Config web application in browser, login and then navigate to ",(0,i.kt)("strong",{parentName:"li"},"Widget view -> Widget...")," from menu."),(0,i.kt)("li",{parentName:"ul"},'Create a new widget configuration, and put "Manage Groups"(or whatever you wish) as ',(0,i.kt)("strong",{parentName:"li"},"Name"),' and select "AdminGroupsWidget" for ',(0,i.kt)("strong",{parentName:"li"},"Widget type")," field."),(0,i.kt)("li",{parentName:"ul"},"Fill-in other fields as necessary and save the configuration."),(0,i.kt)("li",{parentName:"ul"},"From the toolbar, click ",(0,i.kt)("strong",{parentName:"li"},"Matrix")," to go to D2-config matrix and enable the widget configuration, you just created, against appropriate contexts."),(0,i.kt)("li",{parentName:"ul"},"Select ",(0,i.kt)("strong",{parentName:"li"},"Widget view -> Smart View Landing Page...")," from menubar to navigate to landing page configurations."),(0,i.kt)("li",{parentName:"ul"},"Select an applicable configuration from the left side and click ",(0,i.kt)("strong",{parentName:"li"},"Download")," to get the structure file locally and then open in notepad to edit.",(0,i.kt)("admonition",{parentName:"li",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If a pre-created Smartview landing page configuration does not exist, then refer to D2 Administration Guide documentation to create the same and learn basics of\nlanding page structure file."))),(0,i.kt)("li",{parentName:"ul"},"Paste the following piece of xml anywhere right under the ",(0,i.kt)("inlineCode",{parentName:"li"},"<content>")," tag")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'<widget-container>\n    <widget name="Manage Groups" type="AdminGroupsWidget"/>\n</widget-container>\n')),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"If you've used a different name while creating the widget configuration, use that name as the value for ",(0,i.kt)("strong",{parentName:"p"},"name")," attribute.")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Save the landing structure xml file and upload it to D2-Config under the same landing page configuration from where we downloaded it before."),(0,i.kt)("li",{parentName:"ul"},"Save the configuration change in D2-Config and click ",(0,i.kt)("strong",{parentName:"li"},"Tools -> Refresh cache")," from menubar."),(0,i.kt)("li",{parentName:"ul"},"Reloading the D2 Smartview at this point should show an additional widget in the landing page, similar to following\n",(0,i.kt)("img",{alt:"Admin Groups Widget",src:t(1833).Z,width:"422",height:"424"}))),(0,i.kt)("h3",{id:"source-code-structure"},"Source code structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"D2-AdminGroups\n|\n|\n|   pom.xml\n|   \n+---src\n|   \\---main\n|       +---java\n|       |   \\---com\n|       |       +---emc\n|       |       |       D2PluginVersion.java\n|       |       |       \n|       |       \\---opentext\n|       |           \\---d2\n|       |               +---rest\n|       |               |   \\---context\n|       |               |       \\---jc\n|       |               |               PluginRestConfig_AdminGroups.java\n|       |               |               \n|       |               \\---smartview\n|       |                   \\---admingroups\n|       |                       |   AdminGroupsPlugin.java\n|       |                       |   \n|       |                       +---api\n|       |                       |       AdminGroupsVersion.java\n|       |                       |       \n|       |                       \\---rest\n|       |                           |   package-info.java\n|       |                           |   \n|       |                           +---controller\n|       |                           |       AdminGroupsController.java\n|       |                           |       AdminGroupsMembersController.java\n|       |                           |       \n|       |                           +---dfc\n|       |                           |   |   AdminGroupsManager.java\n|       |                           |   |   \n|       |                           |   \\---impl\n|       |                           |           AdminGroupsManagerImpl.java\n|       |                           |           \n|       |                           +---model\n|       |                           |       GroupMembers.java\n|       |                           |       GroupModel.java\n|       |                           |       UserModel.java\n|       |                           |       \n|       |                           \\---view\n|       |                                   GroupMembersFeedView.java\n|       |                                   GroupsFeedView.java\n|       |                                   GroupView.java\n|       |                                   UsersFeedView.java\n|       |                                   UserView.java\n|       |                                   \n|       +---resources\n|       |   |   admingroups-version.properties\n|       |   |   D2Plugin.properties\n|       |   |   \n|       |   +---smartview\n|       |   |       SmartView.properties\n|       |   |       \n|       |   +---strings\n|       |   |   \\---menu\n|       |   |       \\---PMenuContextAdminGroups\n|       |   |               PMenuContextAdminGroups_en.properties\n|       |   |               \n|       |   \\---xml\n|       |       \\---unitymenu\n|       |               PMenuContextAdminGroups.xml\n|       |               \n|       \\---smartview\n|           |   .csslintrc\n|           |   .eslintrc-html.yml\n|           |   .eslintrc.yml\n|           |   .npmrc\n|           |   admingroups.setup.js\n|           |   config-editor.js\n|           |   esmhelper.js\n|           |   Gruntfile.js\n|           |   package.json\n|           |   proxy.js\n|           |   server.conf.js\n|           |   server.js\n|           |           \n|           +---pages\n|           |   |   config-d2.js\n|           |   |   config-dev.js\n|           |   |   favicon.ico\n|           |   |   initialize.js\n|           |   |   loader.css\n|           |   |   otds.html\n|           |   |   redirect.html\n|           |   |   \n|           |   +---debug\n|           |   |       app.html\n|           |   |       \n|           |   \\---release\n|           |           app.html\n|           |           \n|           +---src\n|           |   |   admingroups-init.js\n|           |   |   component.js\n|           |   |   config-build.js\n|           |   |   extensions.json\n|           |   |   Gruntfile.js\n|           |   |   \n|           |   +---bundles\n|           |   |       admingroups-bundle.js\n|           |   |       \n|           |   +---commands\n|           |   |   |   manage.group.js\n|           |   |   |   node.actions.rules.js\n|           |   |   |   \n|           |   |   \\---nls\n|           |   |       |   lang.js\n|           |   |       |   \n|           |   |       \\---root\n|           |   |               lang.js\n|           |   |               \n|           |   +---dialogs\n|           |   |   \\---manage.group\n|           |   |       |   manage.group.dialog.js\n|           |   |       |   manage.group.view.js\n|           |   |       |   \n|           |   |       \\---impl\n|           |   |           |   group.members.form.view.js\n|           |   |           |   manage.group.css\n|           |   |           |   manage.group.hbs\n|           |   |           |   \n|           |   |           \\---nls\n|           |   |               |   lang.js\n|           |   |               |   \n|           |   |               \\---root\n|           |   |                       lang.js\n|           |   |                       \n|           |   +---extensions\n|           |   |   |   admin.groups.icon.sprites.js\n|           |   |   |   admin.groups.perspective.js\n|           |   |   |   admin.groups.tile.js\n|           |   |   |   \n|           |   |   \\---nls\n|           |   |       |   lang.js\n|           |   |       |   \n|           |   |       \\---root\n|           |   |               lang.js\n|           |   |               \n|           |   +---models\n|           |   |       admin.groups.collection.js\n|           |   |       group.members.collection.js\n|           |   |       group.model.js\n|           |   |       member.model.js\n|           |   |       \n|           |   +---test\n|           |   |       extensions.spec.js\n|           |   |       \n|           |   +---utils\n|           |   |   |   alert.util.js\n|           |   |   |   constants.js\n|           |   |   |   menu.utils.js\n|           |   |   |   startup.js\n|           |   |   |   \n|           |   |   +---contexts\n|           |   |   |   \\---factories\n|           |   |   |           admin.groups.collection.factory.js\n|           |   |   |           next.group.factory.js\n|           |   |   |           \n|           |   |   +---perspectives\n|           |   |   |       admin.groups.perspective.json\n|           |   |   |       \n|           |   |   \\---theme\n|           |   |       |   action.icons.js\n|           |   |       |   \n|           |   |       \\---action_icons\n|           |   |               action_sample_icon.svg\n|           |   |               \n|           |   \\---widgets\n|           |       +---admin.groups\n|           |       |   |   admin.groups.manifest.json\n|           |       |   |   admin.groups.view.js\n|           |       |   |   toolitems.js\n|           |       |   |   \n|           |       |   \\---impl\n|           |       |       |   admin.groups.css\n|           |       |       |   \n|           |       |       +---images\n|           |       |       |       group-svgrepo-com.svg\n|           |       |       |       \n|           |       |       \\---nls\n|           |       |           |   admin.groups.manifest.js\n|           |       |           |   lang.js\n|           |       |           |   \n|           |       |           \\---root\n|           |       |                   admin.groups.manifest.js\n|           |       |                   lang.js\n|           |       |                   \n|           |       \\---admin.groups.members\n|           |           |   admin.groups.members.view.js\n|           |           |   \n|           |           \\---impl\n|           |               |   admin.groups.members.css\n|           |               |   \n|           |               \\---nls\n|           |                   |   lang.js\n|           |                   |   \n|           |                   \\---root\n|           |                           lang.js\n|           |                           \n|           \\---test\n|                   Gruntfile.js\n|                   karma.js\n|                   test-common.js\n|                   \n\\---target\n\n")),(0,i.kt)("h4",{id:"files-and-their-purpose"},"Files and their purpose"),(0,i.kt)("p",null,"Following are the list of function oriented source files and their purpose. Other source files present within the plugin are part of\ncommon infrastructure code and explained in ",(0,i.kt)("a",{parentName:"p",href:"../understand.d2sv.plugin"},"Understanding D2SV plugin project"),"."),(0,i.kt)("h6",{id:"rest-controller"},"REST Controller"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/rest/context/jc/PluginRestConfig_AdminGroups.java - Declares Spring Bean ",(0,i.kt)("inlineCode",{parentName:"li"},"AdminGroupsManager")," through ",(0,i.kt)("inlineCode",{parentName:"li"},"AdminGroupsManagerImpl"),"."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/controller/AdminGroupsController.java - Defines a REST controller with two endpoints\nto list all the users and groups from Documentum."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/controller/AdminGroupsMembersController.java - Defines a REST controller with two endpoints\nto list and edit members of a group."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/dfc/AdminGroupsManager.java - Declares the data manager interface used by above REST controllers\nto get/set the data they deal with."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/dfc/impl/AdminGroupsManagerImpl.java - Data manager that interacts with Documentum\nthrough DQL and exchanges data as per ",(0,i.kt)("inlineCode",{parentName:"li"},"AdminGroupsManager")," interface."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/model/GroupMembers.java - Serializable POJO that represents members of a group while editing."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/model/GroupModel.java - Serializable POJO that represents a single group."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/model/UserModel.java - Serializable POJO that represents a single user."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/view/GroupMembersFeedView.java - Spring view used to wrap and serialize a list of group member data. Uses ",(0,i.kt)("inlineCode",{parentName:"li"},"UserView")," in turn to serialize each individual member."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/view/GroupsFeedView.java - Spring view used to wrap and serialize a list of group data. Uses ",(0,i.kt)("inlineCode",{parentName:"li"},"GroupView")," in turn to serialize each individual group."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/view/GroupView.java - Spring view used to seralize a single group data."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/view/UsersFeedView.java - Spring view used to wrap and serialize a list of user data. Uses ",(0,i.kt)("inlineCode",{parentName:"li"},"UserView")," in turn to serialize each individual user."),(0,i.kt)("li",{parentName:"ul"},"src/main/java/com/opentext/d2/smartview/admingroups/rest/view/UserView.java - Spring view used to serialize a single user data.")),(0,i.kt)("h6",{id:"group-manage-menu-configuration-in-back-end-and-its-display--execution-on-the-front-end"},"Group-manage menu configuration in back-end and its display & execution on the front-end"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/resources/strings/menu/PMenuContextAdminGroups/PMenuContextAdminGroups_en.properties - Labels associated with the dynamically configured menu."),(0,i.kt)("li",{parentName:"ul"},"src/main/resources/xml/unitymenu/PMenuContextAdminGroups.xml - The menu definition file that dynamically adds a new type(PMenuContextAdminGroups) of menu for the D2FS ",(0,i.kt)("inlineCode",{parentName:"li"},"D2MenuService")," to discover and return for D2 Smartview."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/bundles/admingroups-bundle.js - A portion of this file is used to refer to key RequireJS modules that define the extensions to the toolbar and menu related D2SV UI API.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"define([\n    ...\n    'admingroups/utils/startup',\n    'admingroups/commands/node.actions.rules',\n    'admingroups/commands/manage.group',\n    ...\n], {});\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/commands/manage.group.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"CommandModel")," that implements the executable logic when a user clicks the ",(0,i.kt)("inlineCode",{parentName:"li"},"Manage")," menu on the UI. It dynamically loads and displays ",(0,i.kt)("inlineCode",{parentName:"li"},"manage.group.dialog.js")," dialog.\nWhen the dialog closes(without cancel flag), it makes an AJAX call to group-update related REST endpoint created by the Java code from above and then finally shows a toast message on successful\ncompletion."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/commands/node.actions.rules.js - Defines client side filtering and association logic to attach the above ",(0,i.kt)("inlineCode",{parentName:"li"},"manage.group.js")," command model implementaion to a UI toolbar item."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/menu.utils.js - Parses the data for ",(0,i.kt)("inlineCode",{parentName:"li"},"PMenuContextAdminGroups")," type of menu into a client-side toolbar definition that in turn is used by landing page tile & perspective."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/startup.js - Runs as part of D2 Smartview client-side startup flow. This flow is executed everytime endusers reload the D2 Smartview application in their internet browser.\nAs part of this startup hook, an AJAX call is made to get the menu configuration data for type ",(0,i.kt)("inlineCode",{parentName:"li"},"PMenuContextAdminGroups"),", then the response is trasformed into a toolbar definition by ",(0,i.kt)("inlineCode",{parentName:"li"},"menu.utils.js"),"."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/extensions.json - A portion of this file registers extensions to the toolbar and menu related D2SV UI API. The corresponding portion is highlighted below")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'"d2/sdk/commands/node.actions.rules": {\n    "extensions": {\n      "admingroups": [\n        "admingroups/commands/node.actions.rules"\n      ]\n    }\n  },\n  "d2/sdk/utils/commands": {\n    "extensions": {\n      "admingroups": [\n        "admingroups/commands/manage.group"\n      ]\n    }\n  }\n')),(0,i.kt)("h6",{id:"tile-on-the-landing-page"},"Tile on the landing page"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/bundles/admingroups-bundle.js - A portion of this file refers to the the RequireJS modules that\nimplement the landing page tile. These references are only used for RequireJS modules that are otherwise not referenced statically\nfrom any other RequireJS module.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"define([\n   ...\n   'admingroups/extensions/admin.groups.icon.sprites',\n   ...\n   'admingroups/extensions/admin.groups.tile',\n   'admingroups/widgets/admin.groups/admin.groups.view'\n   ...\n   'json!admingroups/widgets/admin.groups/admin.groups.manifest.json',\n   'i18n!admingroups/widgets/admin.groups/impl/nls/admin.groups.manifest'\n], {});\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/extensions/admin.groups.icon.sprites.js - Defines the icon to represent a user and a group by means of extension."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/extensions/admin.groups.tile.js - Declares a new widget type handler for the landing page tiles by means of extension."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/extensions.json - A portion of this file registers extensions to the landing page tile & icon related D2SV UI API. The corresponding portion is highlighted below")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'"d2/sdk/utils/landingpage/tiles": {\n    "extensions": {\n      "admingroups": [\n        "admingroups/extensions/admin.groups.tile"\n      ]\n    }\n  },\n  ...\n  "d2/sdk/controls/icon.sprites/node.icon.sprites": {\n      "extensions": {\n        "admingroups": [\n          "admingroups/extensions/admin.groups.icon.sprites"\n        ]\n      }\n    }\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/models/admin.groups.collection.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"BackboneJS")," collection that holds all available groups data.\nUses ",(0,i.kt)("inlineCode",{parentName:"li"},"group.model.js")," to represent each group in the collection. Makes an AJAX call to one of the REST endpoint, created by Java code from above, to get the available groups data."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/models/group.model.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"BackboneJS")," model that holds data for a single group."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/contexts/factories/admin.groups.collection.factory.js - A factory to control creation of initialized/uninitialized group collection instances."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/contexts/factories/next.group.factory.js - A factory to control creation of group-model instances. Purpose\nof this factory is to create a single instance of group model and use that to reflect current selected group item in the UI. This instance is used by ",(0,i.kt)("inlineCode",{parentName:"li"},"admin.groups.view.js")," to constantly\nupdate the selected group data as user clicks an item in the list of visible groups in UI."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/constants.js - A portion of the file defines a few frequently used constant values in the context of landing tile implementation."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/widgets/admin.groups/admin.groups.view.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"MarionetteJS")," view that implements the UI and function for the widget. An instance of this view\nis dynamically created by the D2SV runtime and this instance manages and renders DOM elements to represent the list of all available groups. It also handles user interaction with the DOM elements."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/widgets/admin.groups/toolitems.js - The toolbar configuration used by ",(0,i.kt)("inlineCode",{parentName:"li"},"admin.groups.view.js")," to display inline ",(0,i.kt)("inlineCode",{parentName:"li"},"Manage")," menu. An instance of it is\nmanipulated by ",(0,i.kt)("inlineCode",{parentName:"li"},"menu.utils.js")," to dynamically inject the menu items in the toolbar at the time of D2SV UI startup.")),(0,i.kt)("h6",{id:"the-perspective-landing-tile-expands-into"},"The perspective, landing tile expands into"),(0,i.kt)("p",null,"The perspective is defined in a two panel layout where the left-side re-uses the same ",(0,i.kt)("inlineCode",{parentName:"p"},"admin.groups.view.js")," from landing page tile. Apart from the RequireJS modules\nand other source code resources referred by the landing page tile, here's the other files involved in defining the perspective itself besides the right-side part of it."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/bundles/admingroups-bundle.js - A portion of this file refers to the the RequireJS modules that\nimplement the perspective and right-side part of it. These references are only used for RequireJS modules that are otherwise not referenced statically\nfrom any other RequireJS module.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"define([\n   ...\n   'admingroups/extensions/admin.groups.perspective',\n   ...\n   'admingroups/widgets/admin.groups.members/admin.groups.members.view',\n   'json!admingroups/utils/perspectives/admin.groups.perspective.json',\n   ...\n], {});\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/extensions/admin.groups.perspective.js - Declares an application scope handler and associates a perspective definition file with it."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/extensions.json - A portion of this file registers extensions toward application scope perspective related D2SV UI API. The corresponding portion is highlighted below")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'"d2/sdk/utils/perspectives/app.scope.perspectives": {\n    "extensions": {\n      "admingroups": [\n        "admingroups/extensions/admin.groups.perspective"\n      ]\n    }\n  }\n')),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/models/group.members.collection.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"BackboneJS")," collection that holds membership data for a given group. Uses ",(0,i.kt)("inlineCode",{parentName:"li"},"member.model.js")," to\nrepresent each member within the group. Makes an AJAX call to one of the REST endpoint, created by Java code from above, to get the members data for a selected group."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/models/member.model.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"BackboneJS")," model that holds data for a member within a group."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/contexts/factories/next.group.factory.js - A factory to control creation of group-model instances. Purpose\nof this factory is to create a single instance of group model and use that to reflect current selected group item in UI. This instance is used by ",(0,i.kt)("inlineCode",{parentName:"li"},"admin.groups.members.view.js")," to constantly\nmonitor change to the selected group in UI."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/utils/perspectives/admin.groups.perspective.json - Defines the layout for the perspective and associates ",(0,i.kt)("inlineCode",{parentName:"li"},"admin.groups")," & ",(0,i.kt)("inlineCode",{parentName:"li"},"admin.groups.members"),"\nas the widgets to go on the left and right side respectively. The D2SV runtime dynamically creates the associated view instances when the perspective comes alive."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/widgets/admin.groups.members/admin.groups.members.view.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"MarionetteJS")," view implementation that displays the members of a\nselected group. An instance of this view is dynamically created by D2SV runtime to show list of members in the perspective. The instance automatically updates itself as a result\nof end users selecting a group from the left-side by means of constant watch over the group model instance acquired using ",(0,i.kt)("inlineCode",{parentName:"li"},"next.group.factory.js"),".")),(0,i.kt)("h6",{id:"the-side-panel-dialog-that-manages-group-member"},"The side-panel dialog that manages group member"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/bundles/admingroups-bundle.js - A portion of this file refers to the the RequireJS modules that\nimplements the dialog. These references are only used for RequireJS modules that are otherwise not referenced statically\nfrom any other RequireJS module.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"define([\n   ...\n   'admingroups/dialogs/manage.group/manage.group.dialog',\n   ...\n], {});\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/dialogs/manage.group/manage.group.dialog.js - Uses D2SV UI API to create a side panel and host an instance of ",(0,i.kt)("inlineCode",{parentName:"li"},"manage.group.view.js")," to show the related UI.\nAlso collects information about updated group members and relays that to the caller."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/dialogs/manage.group/manage.group.view.js - A ",(0,i.kt)("inlineCode",{parentName:"li"},"MarionetteJS")," view that wraps an instance of ",(0,i.kt)("inlineCode",{parentName:"li"},"group.members.form.view.js")," to make it renderable within the side panel and\ndefers the instance creation & rendering until required membership data has been fetched through an instance of ",(0,i.kt)("inlineCode",{parentName:"li"},"group.members.collection.js"),". Also defines utility methods to have a check on whether the membership data has changed from what is loaded initially.\nUses ",(0,i.kt)("inlineCode",{parentName:"li"},"manage.group.hbs")," & ",(0,i.kt)("inlineCode",{parentName:"li"},"manage.group.css")," files for HTML templating and CSS styling respectively."),(0,i.kt)("li",{parentName:"ul"},"src/main/smartview/src/dialogs/manage.group/impl/group.members.form.view.js - Uses D2SV UI API to create a statically defined form with multi-select list field to show membership information for the selcted group.\nAlso makes an AJAX call to one of the REST endpoint, created by Java code from above, to get all available users data that serves as the options shown while editing the membership data. Also defines utility method to get the membership\ninformation for the selected group at any time.")))}u.isMDXComponent=!0},1833:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/D2-AdminGroups-120881fe5545eefe344ee6edc1deee22.png"}}]);