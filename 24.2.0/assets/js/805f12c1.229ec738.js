"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[7615],{5680:(e,t,l)=>{l.d(t,{xA:()=>i,yg:()=>c});var a=l(6540);function n(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function o(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?o(Object(l),!0).forEach((function(t){n(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):o(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function d(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)l=o[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)l=o[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var g=a.createContext({}),u=function(e){var t=a.useContext(g),l=t;return e&&(l="function"==typeof e?e(t):r(r({},t),e)),l},i=function(e){var t=u(e.components);return a.createElement(g.Provider,{value:t},e.children)},y="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var l=e.components,n=e.mdxType,o=e.originalType,g=e.parentName,i=d(e,["components","mdxType","originalType","parentName"]),y=u(l),s=n,c=y["".concat(g,".").concat(s)]||y[s]||p[s]||o;return l?a.createElement(c,r(r({ref:t},i),{},{components:l})):a.createElement(c,r({ref:t},i))}));function c(e,t){var l=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=l.length,r=new Array(o);r[0]=s;var d={};for(var g in t)hasOwnProperty.call(t,g)&&(d[g]=t[g]);d.originalType=e,d[y]="string"==typeof e?e:n,r[1]=d;for(var u=2;u<o;u++)r[u]=l[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,l)}s.displayName="MDXCreateElement"},4279:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>g,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>u});var a=l(8168),n=(l(6540),l(5680));const o={},r=void 0,d={unversionedId:"api/d2/controls/dialogs/generic/dialog.state.method",id:"api/d2/controls/dialogs/generic/dialog.state.method",title:"dialog.state.method",description:"DialogStateMethod : d2/sdk/controls/dialogs/generic/dialog.state.method",source:"@site/articles/api/d2/controls/dialogs/generic/dialog.state.method.md",sourceDirName:"api/d2/controls/dialogs/generic",slug:"/api/d2/controls/dialogs/generic/dialog.state.method",permalink:"/d2sv-sdk/24.2.0/api/d2/controls/dialogs/generic/dialog.state.method",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"dialog.schema.builders",permalink:"/d2sv-sdk/24.2.0/api/d2/controls/dialogs/generic/dialog.schema.builders"},next:{title:"dialog.state.methods",permalink:"/d2sv-sdk/24.2.0/api/d2/controls/dialogs/generic/dialog.state.methods"}},g={},u=[{value:"DialogStateMethod : <code>d2/sdk/controls/dialogs/generic/dialog.state.method</code>",id:"dialogstatemethod--d2sdkcontrolsdialogsgenericdialogstatemethod",level:2},{value:"dialogStateMethod.execute(options, result) \u21d2 <code>Promise.&lt;boolean&gt;</code>",id:"dialogstatemethodexecuteoptions-result--promiseboolean",level:3},{value:"DialogStateMethod~MethodMetadata : <code>Object</code>",id:"dialogstatemethodmethodmetadata--object",level:3},{value:"DialogStateMethod~OutputFormData : <code>Object</code>",id:"dialogstatemethodoutputformdata--object",level:3},{value:"DialogStateMethod~DialogMetadata : <code>Object</code>",id:"dialogstatemethoddialogmetadata--object",level:3},{value:"DialogStateMethod~ButtonWrapper : <code>Object</code>",id:"dialogstatemethodbuttonwrapper--object",level:3},{value:"DialogStateMethod~ButtonMetadata : <code>Object</code>",id:"dialogstatemethodbuttonmetadata--object",level:3}],i={toc:u},y="wrapper";function p(e){let{components:t,...l}=e;return(0,n.yg)(y,(0,a.A)({},i,l,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("a",{name:"module_DialogStateMethod"}),(0,n.yg)("h2",{id:"dialogstatemethod--d2sdkcontrolsdialogsgenericdialogstatemethod"},"DialogStateMethod : ",(0,n.yg)("code",null,"d2/sdk/controls/dialogs/generic/dialog.state.method")),(0,n.yg)("p",null,"DialogStateMethod. Base class for implementing D2SV generic dialog state transition logic. All derived classes should override the\nasynchronous ",(0,n.yg)("inlineCode",{parentName:"p"},"execute()")," method to actually implement the transition logic."),(0,n.yg)("p",null,"Also see ",(0,n.yg)("a",{parentName:"p",href:"./dialog.state.methods"},"DialogStateMethods")),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Extends"),": ",(0,n.yg)("a",{parentName:"p",href:"https://marionettejs.com/docs/v2.4.7/marionette.object.html"},(0,n.yg)("code",null,"Marionette.Object")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Example")," ",(0,n.yg)("em",{parentName:"p"},"(A sample method implementation module that constructs state metadata by literal definition for a certain given state name)"),"  "),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-js"},"import StateMethod from 'd2/sdk/controls/dialogs/generic/dialog.state.method';\n\nclass LiteralGetMethod extends StateMethod {\n async execute(options, result) {\n   if(options.formName === 'MyFormName') {\n     result['page-content'] = {\n       dialog: {\n         id: 'user_dialog',\n         label: 'Name Form',\n         content: {\n           text: {\n             order: 1,\n             control: true,\n             id: 'full_name',\n             label: 'Full name',\n             value: 'John Doe'\n           }\n         },\n         buttons: {\n           button: [\n             {id: 'buttonOk', action: 'validDialog()', label: 'OK', order: 1}\n           ]\n         }\n       }\n     };\n     return false; //So that no other succeeeding state method applies\n   }\n   return true;\n }\n}\n\nexport default LiteralGetMethod;\n")),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod"},"DialogStateMethod")," : ",(0,n.yg)("code",null,"d2/sdk/controls/dialogs/generic/dialog.state.method"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("em",{parentName:"li"},"instance"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod+execute"},".execute(options, result)")," \u21d2 ",(0,n.yg)("code",null,"Promise.","<","boolean",">")))),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("em",{parentName:"li"},"inner"),(0,n.yg)("ul",{parentName:"li"},(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod..MethodMetadata"},"~MethodMetadata")," : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod..OutputFormData"},"~OutputFormData")," : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod..DialogMetadata"},"~DialogMetadata")," : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod..ButtonWrapper"},"~ButtonWrapper")," : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("li",{parentName:"ul"},(0,n.yg)("a",{parentName:"li",href:"#module_DialogStateMethod..ButtonMetadata"},"~ButtonMetadata")," : ",(0,n.yg)("code",null,"Object"))))))),(0,n.yg)("a",{name:"module_DialogStateMethod+execute"}),(0,n.yg)("h3",{id:"dialogstatemethodexecuteoptions-result--promiseboolean"},"dialogStateMethod.execute(options, result) \u21d2 ",(0,n.yg)("code",null,"Promise.","<","boolean",">")),(0,n.yg)("p",null,"Implement state transition logic for D2SV generic dialog"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Kind"),": instance method of ",(0,n.yg)("a",{parentName:"p",href:"#module_DialogStateMethod"},(0,n.yg)("code",null,"DialogStateMethod")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Returns"),": ",(0,n.yg)("code",null,"Promise.","<","boolean",">")," - Resolve with ",(0,n.yg)("inlineCode",{parentName:"p"},"false")," to stop executing any other matching state methods that are supposed to execute after it.  "),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Param"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"options"),(0,n.yg)("td",null,(0,n.yg)("code",null,"MethodMetadata")),(0,n.yg)("td",null,(0,n.yg)("p",null,"holder for various current state related metadata"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"result"),(0,n.yg)("td",null,(0,n.yg)("code",null,"OutputFormData")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Output parameter, should be filled in with metadata pertaining to next possible state of the dialog."))),"  ")),(0,n.yg)("a",{name:"module_DialogStateMethod..MethodMetadata"}),(0,n.yg)("h3",{id:"dialogstatemethodmethodmetadata--object"},"DialogStateMethod~MethodMetadata : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("p",null,"Metadata related to current state of the dialog"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,n.yg)("a",{parentName:"p",href:"#module_DialogStateMethod"},(0,n.yg)("code",null,"DialogStateMethod")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"method"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Name of the transition method which is getting applied"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"formName"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Form name of the current dialog state."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"nodes"),(0,n.yg)("td",null,(0,n.yg)("code",null,(0,n.yg)("a",{href:"../../models/node.collection"},"NodeCollection"))),(0,n.yg)("td",null,(0,n.yg)("p",null,"The object selection set on which this method is being applied."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"actionParams"),(0,n.yg)("td",null,(0,n.yg)("code",null,"Object")),(0,n.yg)("td",null,(0,n.yg)("p",null,"If the dialog was invoked through a menu, all the parameters associated with the menu are collection in this part of options."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"[formData]"),(0,n.yg)("td",null,(0,n.yg)("code",null,"Object")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Data collected from currently visible screen of the dialog."))),"  ")),(0,n.yg)("a",{name:"module_DialogStateMethod..OutputFormData"}),(0,n.yg)("h3",{id:"dialogstatemethodoutputformdata--object"},"DialogStateMethod~OutputFormData : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("p",null,"Type of form data to be populated by the state method. The overall structure should match response structure returned by D2-REST 'property-page' endpoint."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,n.yg)("a",{parentName:"p",href:"#module_DialogStateMethod"},(0,n.yg)("code",null,"DialogStateMethod")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,'"page-content"'),(0,n.yg)("td",null,(0,n.yg)("code",null,"Object")),(0,n.yg)("td",null,(0,n.yg)("p",null,"wrapper for the form data"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,'["page-content".dialog]'),(0,n.yg)("td",null,(0,n.yg)("code",null,"DialogMetadata")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Actual form data"))),"  ")),(0,n.yg)("a",{name:"module_DialogStateMethod..DialogMetadata"}),(0,n.yg)("h3",{id:"dialogstatemethoddialogmetadata--object"},"DialogStateMethod~DialogMetadata : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("p",null,"Metadata for a single screen in a dialog."),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,n.yg)("a",{parentName:"p",href:"#module_DialogStateMethod"},(0,n.yg)("code",null,"DialogStateMethod")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"unique identifier of the form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"label"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Displayable title of the form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"[buttons]"),(0,n.yg)("td",null,(0,n.yg)("code",null,"ButtonWrapper")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Interaction buttons for the form"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"[content]"),(0,n.yg)("td",null,(0,n.yg)("code",null,"*")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Structure of the form."))),"  ")),(0,n.yg)("a",{name:"module_DialogStateMethod..ButtonWrapper"}),(0,n.yg)("h3",{id:"dialogstatemethodbuttonwrapper--object"},"DialogStateMethod~ButtonWrapper : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("p",null,"Wrapper for buttons"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,n.yg)("a",{parentName:"p",href:"#module_DialogStateMethod"},(0,n.yg)("code",null,"DialogStateMethod")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"button"),(0,n.yg)("td",null,(0,n.yg)("code",null,"Array.<ButtonMetadata>")),(0,n.yg)("td",null,(0,n.yg)("p",null,"collection of buttons"))),"  ")),(0,n.yg)("a",{name:"module_DialogStateMethod..ButtonMetadata"}),(0,n.yg)("h3",{id:"dialogstatemethodbuttonmetadata--object"},"DialogStateMethod~ButtonMetadata : ",(0,n.yg)("code",null,"Object")),(0,n.yg)("p",null,"Metadata definition of a button"),(0,n.yg)("p",null,(0,n.yg)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,n.yg)("a",{parentName:"p",href:"#module_DialogStateMethod"},(0,n.yg)("code",null,"DialogStateMethod")),(0,n.yg)("br",{parentName:"p"}),"\n",(0,n.yg)("strong",{parentName:"p"},"Properties")),(0,n.yg)("table",null,(0,n.yg)("thead",null,(0,n.yg)("tr",null,(0,n.yg)("th",null,"Name"),(0,n.yg)("th",null,"Type"),(0,n.yg)("th",null,"Description"))),(0,n.yg)("tbody",null,(0,n.yg)("tr",null,(0,n.yg)("td",null,"id"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Uniqueue identifier of the button"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"label"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Display text for the button"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"order"),(0,n.yg)("td",null,(0,n.yg)("code",null,"number")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Sequential position of the button."))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"action"),(0,n.yg)("td",null,(0,n.yg)("code",null,"string")),(0,n.yg)("td",null,(0,n.yg)("p",null,"The action this button represents"))),(0,n.yg)("tr",null,(0,n.yg)("td",null,"[isPrimary]"),(0,n.yg)("td",null,(0,n.yg)("code",null,"boolean")),(0,n.yg)("td",null,(0,n.yg)("p",null,"Whether to visually indicate this button as primary button for the current form."))),"  ")))}p.isMDXComponent=!0}}]);