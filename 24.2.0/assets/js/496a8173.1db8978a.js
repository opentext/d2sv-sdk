"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[7470],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>f});var r=t(6540);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=r.createContext({}),d=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},s=function(e){var n=d(e.components);return r.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),p=d(t),m=o,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||a;return t?r.createElement(f,c(c({ref:n},s),{},{components:t})):r.createElement(f,c({ref:n},s))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[p]="string"==typeof e?e:o,c[1]=i;for(var d=2;d<a;d++)c[d]=t[d];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},591:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=t(8168),o=(t(6540),t(5680));const a={},c="NodeModel",i={unversionedId:"api/nuc/models/node/node.model",id:"api/nuc/models/node/node.model",title:"NodeModel",description:"Provides read/write access to CS nodes.  When creating a new instance, you",source:"@site/articles/api/nuc/models/node/node.model.md",sourceDirName:"api/nuc/models/node",slug:"/api/nuc/models/node/node.model",permalink:"/d2sv-sdk/24.2.0/api/nuc/models/node/node.model",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"NodeAddableTypeCollection",permalink:"/d2sv-sdk/24.2.0/api/nuc/models/node/node.addable.type"},next:{title:"NodeChildren2Collection",permalink:"/d2sv-sdk/24.2.0/api/nuc/models/node.children2/"}},l={},d=[{value:"Examples",id:"examples",level:3}],s={toc:d},p="wrapper";function u(e){let{components:n,...t}=e;return(0,o.yg)(p,(0,r.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"nodemodel"},"NodeModel"),(0,o.yg)("p",null,"Provides read/write access to CS nodes.  When creating a new instance, you\nneed to pass an instance of the ",(0,o.yg)("inlineCode",{parentName:"p"},"Connector")," to the constructor to connect it\nto the server."),(0,o.yg)("p",null,"Nodes can be fetched single or within a collection like container children,\nfor example.  The ",(0,o.yg)("inlineCode",{parentName:"p"},"NodeModel")," supports initialization from the server\nresponses, which have the same response format as the core CS REST API.\nfinishes."),(0,o.yg)("h3",{id:"examples"},"Examples"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"// Fetch a concrete node and print its name on the console\nvar connector = new Connector({\n      connection: {\n        url: '//server/instance/cs/api/v1',\n        supportPath: '/instancesupport'\n      }\n    }),\n    node = new NodeModel({\n      id: 12345\n    }, {\n      connector: connector\n    });\nnode.fetch()\n    .done(function () {\n      console.log(node.get('name'));\n    });\n\n// Create a model for the Enterprise Volume by its subtype\nvar enterpriseVolume = new NodeModel({\n      id: 'volume',\n      type: 141\n    }, {\n      connector: connector\n    });\n")))}u.isMDXComponent=!0}}]);