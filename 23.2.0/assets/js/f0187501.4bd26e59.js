"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[3414],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(f,i(i({ref:t},s),{},{components:n})):r.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4657:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={},i="Base",l={unversionedId:"api/nuc/utils/base",id:"api/nuc/utils/base",title:"Base",description:"This module holds miscellaneous static functions.",source:"@site/articles/api/nuc/utils/base.md",sourceDirName:"api/nuc/utils",slug:"/api/nuc/utils/base",permalink:"/d2sv-sdk/23.2.0/api/nuc/utils/base",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"Authenticators",permalink:"/d2sv-sdk/23.2.0/api/nuc/utils/authenticators/"},next:{title:"Module nuc/util/connector",permalink:"/d2sv-sdk/23.2.0/api/nuc/utils/connector"}},p={},c=[{value:"autoAlignDropDowns(inputElement, dropdownContainer, applyWidth, view, callback)",id:"autoaligndropdownsinputelement-dropdowncontainer-applywidth-view-callback",level:3},{value:"Parameters",id:"parameters",level:4}],s={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"base"},"Base"),(0,o.kt)("p",null,"This module holds miscellaneous static functions."),(0,o.kt)("h3",{id:"autoaligndropdownsinputelement-dropdowncontainer-applywidth-view-callback"},"autoAlignDropDowns(inputElement, dropdownContainer, applyWidth, view, callback)"),(0,o.kt)("p",null,"Align drop-downs either top or bottom for the inputElement based on available space."),(0,o.kt)("h4",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,"inputElement: The element object relative to which the drop-dwon will be shown"),(0,o.kt)("p",null,"dropdownContainer: The drop-down container element object"),(0,o.kt)("p",null,"applyWidth: True for applying inputElement width to drop-down elements, false for applying custom specific width"),(0,o.kt)("p",null,"view: inputElement view"),(0,o.kt)("p",null,"callback: Is used to perform any actions in the view after form scroll / window scroll"))}d.isMDXComponent=!0}}]);