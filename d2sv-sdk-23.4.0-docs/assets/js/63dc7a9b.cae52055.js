"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[5040],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>u});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=o.createContext({}),c=function(e){var n=o.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(s.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,u=p["".concat(s,".").concat(m)]||p[m]||g[m]||i;return t?o.createElement(u,a(a({ref:n},d),{},{components:t})):o.createElement(u,a({ref:n},d))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,a=new Array(i);a[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=t[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4611:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=t(7462),r=(t(7294),t(3905));const i={},a=void 0,l={unversionedId:"api/d2/controls/dialogs/generic/dialog.content.view",id:"api/d2/controls/dialogs/generic/dialog.content.view",title:"dialog.content.view",description:"DialogContentView : d2/sdk/controls/dialogs/generic/dialog.content.view",source:"@site/articles/api/d2/controls/dialogs/generic/dialog.content.view.md",sourceDirName:"api/d2/controls/dialogs/generic",slug:"/api/d2/controls/dialogs/generic/dialog.content.view",permalink:"/api/d2/controls/dialogs/generic/dialog.content.view",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"dialog.actions",permalink:"/api/d2/controls/dialogs/generic/dialog.actions"},next:{title:"dialog.content.views",permalink:"/api/d2/controls/dialogs/generic/dialog.content.views"}},s={},c=[{value:"DialogContentView : <code>d2/sdk/controls/dialogs/generic/dialog.content.view</code>",id:"dialogcontentview--d2sdkcontrolsdialogsgenericdialogcontentview",level:2}],d={toc:c},p="wrapper";function g(e){let{components:n,...t}=e;return(0,r.kt)(p,(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("a",{name:"module_DialogContentView"}),(0,r.kt)("h2",{id:"dialogcontentview--d2sdkcontrolsdialogsgenericdialogcontentview"},"DialogContentView : ",(0,r.kt)("code",null,"d2/sdk/controls/dialogs/generic/dialog.content.view")),(0,r.kt)("p",null,"DialogContentView. Base class for defining handler of dialog content view in a D2SV generic dialog screen. All derived classes should override the\n",(0,r.kt)("inlineCode",{parentName:"p"},"resolveView()")," method to return appropriate view content. The ",(0,r.kt)("inlineCode",{parentName:"p"},"resolveView()")," method can be synchronous or asynchronous.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"resolveView()")," method must return either instance object of 'Marionette View' (or) Marionette View Class."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Extends"),": ",(0,r.kt)("a",{parentName:"p",href:"https://marionettejs.com/docs/v2.4.7/marionette.object.html"},(0,r.kt)("code",null,"Marionette.Object")),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"See"),": ",(0,r.kt)("a",{parentName:"p",href:"./dialog.content.views"},"DialogContentViews"),(0,r.kt)("br",{parentName:"p"}),"\n",(0,r.kt)("strong",{parentName:"p"},"Example")," ",(0,r.kt)("em",{parentName:"p"},"(A sample dialog content view implementation(dialog.content.view.a.js) that returns the Marionette View instance for generic dialog asynchronously)"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import DialogContentView from 'd2/sdk/controls/dialogs/generic/dialog.content.view';\nimport CustomFormView from 'mybundle/generic.dialog/custom.form.view';\n\nclass DialogContentViewA extends DialogContentView {\n constructor(options={}) {\n   super(options);\n }\n\n async resolveView(options = {}) {\n   let customFormView = new CustomFormView({...options});\n   return customFormView;\n }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")," ",(0,r.kt)("em",{parentName:"p"},"(A sample dialog content view implementation(dialog.content.view.a.js) that returns the Marionette View instance for generic dialog synchronously)"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"import DialogContentView from 'd2/sdk/controls/dialogs/generic/dialog.content.view';\nimport CustomFormView from 'mybundle/generic.dialog/custom.form.view';\n\nclass DialogContentViewA extends DialogContentView {\n constructor(options={}) {\n   super(options);\n }\n\n resolveView(options = {}) {\n   let customFormView = new CustomFormView({...options});\n   return customFormView;\n }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")," ",(0,r.kt)("em",{parentName:"p"},"(To associate this dialog content view with binding rule, an extension(generic.dialog.content.view.js) could be defined as)"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import DialogContentViewA from \'mybundle/generic.dialog/dialog.content.view.a\';\nimport DialogContentViewB from \'mybundle/generic.dialog/dialog.content.view.b\';\n\nconst dialogContentViewRules = [\n  {equals: {"formName": "FormA"}, viewClass: DialogContentViewA},\n  {equals: {"formName": "FormB"}, viewClass: DialogContentViewB}\n];\n\nexport default dialogContentViewRules;\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example")," ",(0,r.kt)("em",{parentName:"p"},"(To finally register the extension, in extensions.json)"),"  "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'{\n "d2/sdk/controls/dialogs/generic/dialog.content.views": {\n   "extensions": {\n     "mybundle": [\n       "mybundle/extensions/generic.dialog.content.view"\n     ]\n   }\n }\n}\n')))}g.isMDXComponent=!0}}]);