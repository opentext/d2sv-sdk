"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[5830],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var o=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,i=function(e,t){if(null==e)return{};var n,o,i={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},d=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,d=a(e,["components","mdxType","originalType","parentName"]),k=s(n),p=i,m=k["".concat(c,".").concat(p)]||k[p]||u[p]||l;return n?o.createElement(m,r(r({ref:t},d),{},{components:n})):o.createElement(m,r({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,r=new Array(l);r[0]=p;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[k]="string"==typeof e?e:i,r[1]=a;for(var s=2;s<l;s++)r[s]=n[s];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5920:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var o=n(7462),i=(n(7294),n(3905));const l={},r=void 0,a={unversionedId:"api/d2/controls/blocker/blocker",id:"api/d2/controls/blocker/blocker",title:"blocker",description:"BlockingView : d2/sdk/controls/blocker/blocker",source:"@site/articles/api/d2/controls/blocker/blocker.md",sourceDirName:"api/d2/controls/blocker",slug:"/api/d2/controls/blocker/",permalink:"/api/d2/controls/blocker/",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"open.app.scope.behavior",permalink:"/api/d2/controls/behaviors/open.app.scope.behavior"},next:{title:"content.assist.dialog",permalink:"/api/d2/controls/dialogs/content.assist.dialog"}},c={},s=[{value:"BlockingView : <code>d2/sdk/controls/blocker/blocker</code>",id:"blockingview--d2sdkcontrolsblockerblocker",level:2},{value:"BlockingView.imbue(view)",id:"blockingviewimbueview",level:3},{value:"BlockingView.delegate(view, delegateToView)",id:"blockingviewdelegateview-delegatetoview",level:3}],d={toc:s},k="wrapper";function u(e){let{components:t,...n}=e;return(0,i.kt)(k,(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("a",{name:"module_BlockingView"}),(0,i.kt)("h2",{id:"blockingview--d2sdkcontrolsblockerblocker"},"BlockingView : ",(0,i.kt)("code",null,"d2/sdk/controls/blocker/blocker")),(0,i.kt)("p",null,"UI blocker. Used to temporarily make the whole or part of Smart View UI non-interactive to block any unexpected user\ninput while executing a critical piece of logic either in the background or foreground."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Extends"),": ",(0,i.kt)("code",null,"Object"),"  "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#module_BlockingView"},"BlockingView")," : ",(0,i.kt)("code",null,"d2/sdk/controls/blocker/blocker"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#module_BlockingView.imbue"},".imbue(view)")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#module_BlockingView.delegate"},".delegate(view, delegateToView)"))))),(0,i.kt)("a",{name:"module_BlockingView.imbue"}),(0,i.kt)("h3",{id:"blockingviewimbueview"},"BlockingView.imbue(view)"),(0,i.kt)("p",null,"Mix progrss blocking APIs as well as well as blocker instance to a view."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,i.kt)("a",{parentName:"p",href:"#module_BlockingView"},(0,i.kt)("code",null,"BlockingView")),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Mixes"),": ",(0,i.kt)("code",null,"BlockerAPI"),"  "),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Param"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"view"),(0,i.kt)("td",null,(0,i.kt)("code",null,(0,i.kt)("a",{href:"https://marionettejs.com/docs/v2.4.7/marionette.view.html"},"Marionette.View"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"The view instance where blocing APIs are to be mixed."))),"  ")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")," ",(0,i.kt)("em",{parentName:"p"},"(An item view showing/hiding blocker when its model syncs)"),"  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"define([\n   'nuc/lib/marionette',\n   'd2/sdk/controls/blocker/blocker'\n   'd2/sdk/models/node.model',\n], function(Marionette, BlockingView, NodeModel){\n   'use strict';\n\n   var NodeView = Marionette.ItemView.extend({\n       constructor: function NodeView(options) {\n           options = options || {};\n           options.model = new NodeModel({id: options.id}, options);\n\n           BlockingView.imbue(this);\n       },\n\n       onRender: function() {\n         this.blockAction(); // Blocker API that got mixed into this instance due to BlockingView.imbue() above\n         this.model.fetch().always(this.unblockActions.bind(this));\n       }\n   });\n\n   return NodeView;\n});\n")),(0,i.kt)("a",{name:"module_BlockingView.delegate"}),(0,i.kt)("h3",{id:"blockingviewdelegateview-delegatetoview"},"BlockingView.delegate(view, delegateToView)"),(0,i.kt)("p",null,"Mix progress blocking APIs to a view where the blocker instance is delegated to a different view."),(0,i.kt)("p",null,"Useful when there are more than one view instance with parent-child relationship such that each of the views want to mix\nblocker APIs in it without creating duplicate blocker instances."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": static method of ",(0,i.kt)("a",{parentName:"p",href:"#module_BlockingView"},(0,i.kt)("code",null,"BlockingView")),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Mixes"),": ",(0,i.kt)("code",null,"BlockerAPI"),"  "),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Param"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"view"),(0,i.kt)("td",null,(0,i.kt)("code",null,(0,i.kt)("a",{href:"https://marionettejs.com/docs/v2.4.7/marionette.view.html"},"Marionette.View"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"The view instance where blocing APIs are to be mixed."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"delegateToView"),(0,i.kt)("td",null,(0,i.kt)("code",null,(0,i.kt)("a",{href:"https://marionettejs.com/docs/v2.4.7/marionette.view.html"},"Marionette.View"))),(0,i.kt)("td",null,(0,i.kt)("p",null,"The view which already has blocker APIs mixed and is going to be used as source of blocker instance."))),"  ")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Example")," ",(0,i.kt)("em",{parentName:"p"},"(An item view showing/hiding blocker when its model syncs)"),"  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"define([\n   'nuc/lib/marionette',\n   'd2/sdk/controls/blocker/blocker'\n   'd2/sdk/models/node.model',\n], function(Marionette, BlockingView, NodeModel){\n   'use strict';\n\n   var NodeView = Marionette.ItemView.extend({\n       constructor: function NodeView(options) {\n           options = options || {};\n           options.model = new NodeModel({id: options.id}, options);\n\n           BlockingView.delegate(this, options.parentView); // Assuming 'parentView' already has blocker API mixed to it\n       },\n\n       onRender: function() {\n         this.blockAction(); // Blocker API that got mixed into this instance due to BlockingView.imbue() above\n         this.model.fetch().always(this.unblockActions.bind(this));\n       }\n   });\n\n   return NodeView;\n});\n")))}u.isMDXComponent=!0}}]);