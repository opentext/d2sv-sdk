"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[2952],{3905:(e,t,i)=>{i.d(t,{Zo:()=>m,kt:()=>k});var l=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,l)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function a(e,t){if(null==e)return{};var i,l,n=function(e,t){if(null==e)return{};var i,l,n={},o=Object.keys(e);for(l=0;l<o.length;l++)i=o[l],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(l=0;l<o.length;l++)i=o[l],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=l.createContext({}),p=function(e){var t=l.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},m=function(e){var t=p(e.components);return l.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=a(e,["components","mdxType","originalType","parentName"]),d=p(i),c=n,k=d["".concat(s,".").concat(c)]||d[c]||u[c]||o;return i?l.createElement(k,r(r({ref:t},m),{},{components:i})):l.createElement(k,r({ref:t},m))}));function k(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,r=new Array(o);r[0]=c;var a={};for(var s in t)hasOwnProperty.call(t,s)&&(a[s]=t[s]);a.originalType=e,a[d]="string"==typeof e?e:n,r[1]=a;for(var p=2;p<o;p++)r[p]=i[p];return l.createElement.apply(null,r)}return l.createElement.apply(null,i)}c.displayName="MDXCreateElement"},3248:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var l=i(7462),n=(i(7294),i(3905));const o={},r=void 0,a={unversionedId:"api/d2/controls/list/simple.list.view",id:"api/d2/controls/list/simple.list.view",title:"simple.list.view",description:"SimpleListView : d2/sdk/controls/list/simple.list.view",source:"@site/articles/api/d2/controls/list/simple.list.view.md",sourceDirName:"api/d2/controls/list",slug:"/api/d2/controls/list/simple.list.view",permalink:"/api/d2/controls/list/simple.list.view",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"listitem.type.node.view",permalink:"/api/d2/controls/list/listitem.type.node.view"},next:{title:"sortable.list.view",permalink:"/api/d2/controls/list/sortable.list.view"}},s={},p=[{value:"SimpleListView : <code>d2/sdk/controls/list/simple.list.view</code>",id:"simplelistview--d2sdkcontrolslistsimplelistview",level:2},{value:"simpleListView.mergeAttributesFromSelectedModelOnIDChange : <code>Boolean</code>",id:"simplelistviewmergeattributesfromselectedmodelonidchange--boolean",level:3},{value:"simpleListView.skippableAttributesOnMerge : <code>Array.&lt;string&gt;</code>",id:"simplelistviewskippableattributesonmerge--arraystring",level:3},{value:"simpleListView.attributesUsedForEqualityComparison : <code>Array.&lt;string&gt;</code>",id:"simplelistviewattributesusedforequalitycomparison--arraystring",level:3},{value:"SimpleListView~SimpleListView",id:"simplelistviewsimplelistview",level:3},{value:"new SimpleListView(options)",id:"new-simplelistviewoptions",level:4}],m={toc:p},d="wrapper";function u(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,l.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("a",{name:"module_SimpleListView"}),(0,n.kt)("h2",{id:"simplelistview--d2sdkcontrolslistsimplelistview"},"SimpleListView : ",(0,n.kt)("code",null,"d2/sdk/controls/list/simple.list.view")),(0,n.kt)("p",null,"A flat list view backed by a ",(0,n.kt)("a",{parentName:"p",href:"https://backbonejs.org/#Collection"},"Backbone.Collection"),"."),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"Backbone.Model")," instances could be added/removed from the backing collection to update the view dynamically."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Extends"),": ",(0,n.kt)("a",{parentName:"p",href:"https://marionettejs.com/docs/v2.4.7/marionette.collectionview.html"},(0,n.kt)("code",null,"Marionette.CollectionView")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"See")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./listitem.type.model.view"},"ListItemTypeModel")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"./listitem.type.node.view"},"ListItemTypeNode"))),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Example")," ",(0,n.kt)("em",{parentName:"p"},"(Sample list with a selection)"),"  "),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-js"},"define([\n 'nuc/lib/backbone',\n 'nuc/lib/marionette',\n 'd2/sdk/controls/list/simple.list.view',\n 'd2/sdk/controls/list/listitem.type.node.view',\n 'd2/sdk/models/node.model'\n], function(Backbone, Marionette, ListView, ListItemTypeNodeView, NodeModel){\n 'use strict';\n\n  var MyListView = ListView.extend({\n   childView: ListItemTypeNodeView,\n   constructor: function MyListView(options) {\n     options = options || {};\n     MyListView.__super__.constructor.call(this, options);\n   }\n });\n\n var MyCollection = Backbone.Collection.extend({\n   model: NodeModel\n });\n\n var collection = new MyCollection([\n   {id: '1', name: 'One', mime_type: 'application/pdf'},\n   {id: '2', name: 'Two', mime_type: 'image/jpg'}\n ]);\n\n new Marionette.Region({el: '.host-el'}).show(new MyListView({\n   collection: collection, selectedModel: new NodeModel({id: '2'})\n }));\n});\n")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#module_SimpleListView"},"SimpleListView")," : ",(0,n.kt)("code",null,"d2/sdk/controls/list/simple.list.view"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"instance"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#module_SimpleListView+mergeAttributesFromSelectedModelOnIDChange"},".mergeAttributesFromSelectedModelOnIDChange")," : ",(0,n.kt)("code",null,"Boolean")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#module_SimpleListView+skippableAttributesOnMerge"},".skippableAttributesOnMerge")," : ",(0,n.kt)("code",null,"Array.","<","string",">")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#module_SimpleListView+attributesUsedForEqualityComparison"},".attributesUsedForEqualityComparison")," : ",(0,n.kt)("code",null,"Array.","<","string",">")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("em",{parentName:"li"},"inner"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#module_SimpleListView..SimpleListView"},"~SimpleListView"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"#new_module_SimpleListView..SimpleListView_new"},"new SimpleListView(options)"))))))))),(0,n.kt)("a",{name:"module_SimpleListView+mergeAttributesFromSelectedModelOnIDChange"}),(0,n.kt)("h3",{id:"simplelistviewmergeattributesfromselectedmodelonidchange--boolean"},"simpleListView.mergeAttributesFromSelectedModelOnIDChange : ",(0,n.kt)("code",null,"Boolean")),(0,n.kt)("p",null,"Whether to merge attributes of constructor option ",(0,n.kt)("inlineCode",{parentName:"p"},"selectedModel")," to matching model within the collection\nwhenever ",(0,n.kt)("inlineCode",{parentName:"p"},"id")," attribute of the ",(0,n.kt)("inlineCode",{parentName:"p"},"selectedModel")," changes."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,n.kt)("a",{parentName:"p",href:"#module_SimpleListView"},(0,n.kt)("code",null,"SimpleListView")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Default"),": ",(0,n.kt)("code",null,"true"),"  "),(0,n.kt)("a",{name:"module_SimpleListView+skippableAttributesOnMerge"}),(0,n.kt)("h3",{id:"simplelistviewskippableattributesonmerge--arraystring"},"simpleListView.skippableAttributesOnMerge : ",(0,n.kt)("code",null,"Array.","<","string",">")),(0,n.kt)("p",null,"Which attributes to skip while merging from ",(0,n.kt)("inlineCode",{parentName:"p"},"selectedModel")," to a matching model within the collection"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,n.kt)("a",{parentName:"p",href:"#module_SimpleListView"},(0,n.kt)("code",null,"SimpleListView")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Default"),": ",(0,n.kt)("code",null,"['","name","']"),"  "),(0,n.kt)("a",{name:"module_SimpleListView+attributesUsedForEqualityComparison"}),(0,n.kt)("h3",{id:"simplelistviewattributesusedforequalitycomparison--arraystring"},"simpleListView.attributesUsedForEqualityComparison : ",(0,n.kt)("code",null,"Array.","<","string",">")),(0,n.kt)("p",null,"Which attributes are used to compare for equality of ",(0,n.kt)("inlineCode",{parentName:"p"},"selectedModel")," and models within the collection"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": instance property of ",(0,n.kt)("a",{parentName:"p",href:"#module_SimpleListView"},(0,n.kt)("code",null,"SimpleListView")),(0,n.kt)("br",{parentName:"p"}),"\n",(0,n.kt)("strong",{parentName:"p"},"Default"),": ",(0,n.kt)("code",null,"['","id","']"),"  "),(0,n.kt)("a",{name:"module_SimpleListView..SimpleListView"}),(0,n.kt)("h3",{id:"simplelistviewsimplelistview"},"SimpleListView~SimpleListView"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Kind"),": inner class of ",(0,n.kt)("a",{parentName:"p",href:"#module_SimpleListView"},(0,n.kt)("code",null,"SimpleListView")),"  "),(0,n.kt)("a",{name:"new_module_SimpleListView..SimpleListView_new"}),(0,n.kt)("h4",{id:"new-simplelistviewoptions"},"new SimpleListView(options)"),(0,n.kt)("table",null,(0,n.kt)("thead",null,(0,n.kt)("tr",null,(0,n.kt)("th",null,"Param"),(0,n.kt)("th",null,"Type"),(0,n.kt)("th",null,"Description"))),(0,n.kt)("tbody",null,(0,n.kt)("tr",null,(0,n.kt)("td",null,"options"),(0,n.kt)("td",null,(0,n.kt)("code",null,"object")),(0,n.kt)("td",null,(0,n.kt)("p",null,"Constructor options. Following are the options specifically supported by the list apart from those from its supertype."))),(0,n.kt)("tr",null,(0,n.kt)("td",null,"[options.emptyStateMessage]"),(0,n.kt)("td",null,(0,n.kt)("code",null,"string")),(0,n.kt)("td",null,(0,n.kt)("p",null,"Message to show when there are no items in the associated collection."))),(0,n.kt)("tr",null,(0,n.kt)("td",null,"[options.selectedModel]"),(0,n.kt)("td",null,(0,n.kt)("code",null,(0,n.kt)("a",{href:"../../models/node.model"},"NodeModel"))),(0,n.kt)("td",null,(0,n.kt)("p",null,"Show a selection highlight for this model"))),"  ")))}u.isMDXComponent=!0}}]);