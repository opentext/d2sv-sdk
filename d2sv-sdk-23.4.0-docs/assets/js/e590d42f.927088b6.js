"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[9563],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=o.createContext({}),s=function(e){var t=o.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=s(e.components);return o.createElement(i.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(f,c(c({ref:t},p),{},{components:n})):o.createElement(f,c({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,c=new Array(r);c[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<r;s++)c[s]=n[s];return o.createElement.apply(null,c)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8252:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var o=n(7462),a=(n(7294),n(3905));const r={},c=void 0,l={unversionedId:"api/d2/utils/contexts/factories/factory",id:"api/d2/utils/contexts/factories/factory",title:"factory",description:"BaseFactory : d2/sdk/utils/contexts/factories/factory",source:"@site/articles/api/d2/utils/contexts/factories/factory.md",sourceDirName:"api/d2/utils/contexts/factories",slug:"/api/d2/utils/contexts/factories/factory",permalink:"/api/d2/utils/contexts/factories/factory",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"connector",permalink:"/api/d2/utils/contexts/factories/connector"},next:{title:"default.widget.types.map",permalink:"/api/d2/utils/landingpage/default.widget.types.map"}},i={},s=[{value:"BaseFactory : <code>d2/sdk/utils/contexts/factories/factory</code>",id:"basefactory--d2sdkutilscontextsfactoriesfactory",level:2},{value:"<em>baseFactory.propertyPrefix : <code>string</code></em>",id:"basefactorypropertyprefix--codestringcode",level:3},{value:"<em>baseFactory.isFetchable() \u21d2 <code>boolean</code></em>",id:"basefactoryisfetchable--codebooleancode",level:3},{value:"<em>baseFactory.fetch() \u21d2 <code>void</code></em>",id:"basefactoryfetch--codevoidcode",level:3}],p={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("a",{name:"module_BaseFactory"}),(0,a.kt)("h2",{id:"basefactory--d2sdkutilscontextsfactoriesfactory"},"BaseFactory : ",(0,a.kt)("code",null,"d2/sdk/utils/contexts/factories/factory")),(0,a.kt)("p",null,"Interface for classes that want to implement a factory to create a ",(0,a.kt)("inlineCode",{parentName:"p"},"Backbone.Model")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Backbone.Collection")," or just a plain ",(0,a.kt)("inlineCode",{parentName:"p"},"Object"),"."),(0,a.kt)("p",null,"The created model/collection/object is attached to the applicable ",(0,a.kt)("inlineCode",{parentName:"p"},"context")," and all such instances are fetched when the ",(0,a.kt)("inlineCode",{parentName:"p"},"context")," is fetched."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Extends"),": ",(0,a.kt)("code",null,"Object"),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"Example")," ",(0,a.kt)("em",{parentName:"p"},"(To create a collection factory)"),"  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\ndefine([\n  'module',\n  'nuc/lib/underscore',\n  'nuc/lib/backbone',\n  'd2/sdk/utils/contexts/factories/factory',\n  'd2/sdk/utils/contexts/factories/connector',\n  'd2/sdk/utils/commands',\n  'mybundle/models/sample.collection'\n  ], function (module, _, Backbone, CollectionFactory, ConnectorFactory,\n   commands, SampleCollection) {\n     'use strict';\n\n     var SampleCollectionFactory = CollectionFactory.extend({\n\n         propertyPrefix: 'sampleCollection',\n\n         constructor: function SampleCollectionFactory(context, options) {\n           CollectionFactory.prototype.constructor.apply(this, arguments);\n\n           var collection = this.options.widget || this.options.sampleCollection || {}; //It is customary to use the same name as propertyPrefix\n           if (!(collection instanceof Backbone.Collection)) {\n             var connector = context.getObject(ConnectorFactory, options),\n               config = module.config();\n\n             collection = new SampleCollection(collection.models, _.extend(\n             { connector: connector },\n             collection.options, config.options,\n             SampleCollectionFactory.getDefaultResourceScope(),\n             { autoreset: true }));\n          }\n\n          this.property = collection;\n        },\n\n        fetch: function (options) {\n           return this.property.fetch(options);\n        }\n\n     },\n     {\n\n         getDefaultResourceScope: function () {\n           return _.deepClone({\n             commands: commands.getAllSignatures()\n           });\n         }\n\n     });\n\n     return SampleCollectionFactory;\n\n});\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example")," ",(0,a.kt)("em",{parentName:"p"},"(Whereas the sample collection could be simply defined as)"),"  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"\ndefine([\n  'nuc/lib/backbone',\n  'd2/sdk/models/mixins/collection.resource.mixin'\n], function(Backbone, CollectionResourceMixin){\n 'use strict';\n\n var SampleCollection = Backbone.Collection.extend({\n   constructor: function SampleCollection(models, options) {\n     options = options || {};\n     this.options = options;\n\n     SampleCollection.__super__.constructor.call(this, models, options);\n\n     this.makeCollectionResource(options);\n   }\n });\n\n CollectionResourceMixin.mixin(SampleCollection.prototype);\n\n return SampleCollection;\n});\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#module_BaseFactory"},"BaseFactory")," : ",(0,a.kt)("code",null,"d2/sdk/utils/contexts/factories/factory"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},(0,a.kt)("a",{parentName:"em",href:"#module_BaseFactory+propertyPrefix"},".propertyPrefix")," : ",(0,a.kt)("code",null,"string"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},(0,a.kt)("a",{parentName:"em",href:"#module_BaseFactory+isFetchable"},".isFetchable()")," \u21d2 ",(0,a.kt)("code",null,"boolean"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},(0,a.kt)("a",{parentName:"em",href:"#module_BaseFactory+fetch"},".fetch()")," \u21d2 ",(0,a.kt)("code",null,"void")))))),(0,a.kt)("a",{name:"module_BaseFactory+propertyPrefix"}),(0,a.kt)("h3",{id:"basefactorypropertyprefix--codestringcode"},(0,a.kt)("em",{parentName:"h3"},"baseFactory.propertyPrefix : ",(0,a.kt)("code",null,"string"))),(0,a.kt)("p",null,"Name against which the created model/collection/object is to be saved."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Kind"),": instance abstract property of ",(0,a.kt)("a",{parentName:"p",href:"#module_BaseFactory"},(0,a.kt)("code",null,"BaseFactory")),"  "),(0,a.kt)("a",{name:"module_BaseFactory+isFetchable"}),(0,a.kt)("h3",{id:"basefactoryisfetchable--codebooleancode"},(0,a.kt)("em",{parentName:"h3"},"baseFactory.isFetchable() \u21d2 ",(0,a.kt)("code",null,"boolean"))),(0,a.kt)("p",null,"Whether this factory instance is fetchable or not."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Kind"),": instance abstract method of ",(0,a.kt)("a",{parentName:"p",href:"#module_BaseFactory"},(0,a.kt)("code",null,"BaseFactory")),(0,a.kt)("br",{parentName:"p"}),"\n",(0,a.kt)("strong",{parentName:"p"},"Returns"),": ",(0,a.kt)("code",null,"boolean")," - should return ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," when the model associated with this factory is fetchable, ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," otherwise.  "),(0,a.kt)("a",{name:"module_BaseFactory+fetch"}),(0,a.kt)("h3",{id:"basefactoryfetch--codevoidcode"},(0,a.kt)("em",{parentName:"h3"},"baseFactory.fetch() \u21d2 ",(0,a.kt)("code",null,"void"))),(0,a.kt)("p",null,"Should delegate this fetch to actually fetch the model/collection/object created by this factory."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Kind"),": instance abstract method of ",(0,a.kt)("a",{parentName:"p",href:"#module_BaseFactory"},(0,a.kt)("code",null,"BaseFactory"))))}u.isMDXComponent=!0}}]);