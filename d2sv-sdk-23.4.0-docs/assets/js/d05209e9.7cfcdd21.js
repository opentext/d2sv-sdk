"use strict";(self.webpackChunkd2sv_sdk_builder=self.webpackChunkd2sv_sdk_builder||[]).push([[9564],{3905:(e,t,l)=>{l.d(t,{Zo:()=>c,kt:()=>m});var n=l(7294);function i(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function o(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function a(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?o(Object(l),!0).forEach((function(t){i(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):o(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function r(e,t){if(null==e)return{};var l,n,i=function(e,t){if(null==e)return{};var l,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)l=o[n],t.indexOf(l)>=0||(i[l]=e[l]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)l=o[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(i[l]=e[l])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),l=t;return e&&(l="function"==typeof e?e(t):a(a({},t),e)),l},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var l=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=u(l),b=i,m=d["".concat(s,".").concat(b)]||d[b]||p[b]||o;return l?n.createElement(m,a(a({ref:t},c),{},{components:l})):n.createElement(m,a({ref:t},c))}));function m(e,t){var l=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=l.length,a=new Array(o);a[0]=b;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:i,a[1]=r;for(var u=2;u<o;u++)a[u]=l[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,l)}b.displayName="MDXCreateElement"},5265:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var n=l(7462),i=(l(7294),l(3905));const o={},a=void 0,r={unversionedId:"api/d2/controls/list/sortable.list.view",id:"api/d2/controls/list/sortable.list.view",title:"sortable.list.view",description:"SortableListView : d2/sdk/controls/list/sortable.list.view",source:"@site/articles/api/d2/controls/list/sortable.list.view.md",sourceDirName:"api/d2/controls/list",slug:"/api/d2/controls/list/sortable.list.view",permalink:"/api/d2/controls/list/sortable.list.view",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"api",previous:{title:"simple.list.view",permalink:"/api/d2/controls/list/simple.list.view"},next:{title:"layoutview.events.propagation.mixin",permalink:"/api/d2/controls/mixins/layoutview.events.propagation.mixin"}},s={},u=[{value:"SortableListView : <code>d2/sdk/controls/list/sortable.list.view</code>",id:"sortablelistview--d2sdkcontrolslistsortablelistview",level:2},{value:"SortableListView~SortableListView",id:"sortablelistviewsortablelistview",level:3},{value:"new SortableListView(options)",id:"new-sortablelistviewoptions",level:4},{value:"SortableListView~RemovableDetectionCallback \u21d2 <code>Boolean</code>",id:"sortablelistviewremovabledetectioncallback--boolean",level:3}],c={toc:u},d="wrapper";function p(e){let{components:t,...l}=e;return(0,i.kt)(d,(0,n.Z)({},c,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("a",{name:"module_SortableListView"}),(0,i.kt)("h2",{id:"sortablelistview--d2sdkcontrolslistsortablelistview"},"SortableListView : ",(0,i.kt)("code",null,"d2/sdk/controls/list/sortable.list.view")),(0,i.kt)("p",null,"A flat list view backed by a ",(0,i.kt)("a",{parentName:"p",href:"https://backbonejs.org/#Collection"},"Backbone.Collection"),". Items in the list view could be\ndragged around to re-order them within the list."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Extends"),": ",(0,i.kt)("a",{parentName:"p",href:"https://marionettejs.com/docs/v2.4.7/marionette.compositeview.html"},(0,i.kt)("code",null,"Marionette.CompositeView")),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Example")," ",(0,i.kt)("em",{parentName:"p"},"(Typical usage)"),"  "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},"//In mybundle/trial/list/sortable.listitem.hbs\n<div class=\"item-label\" data-d2-key=\"{{name}}\">{{label}}</div>\n\n//In a test module\ndefine([\n 'nuc/lib/backbone',\n 'nuc/lib/marionette',\n 'd2/sdk/controls/list/sortable.list.view',\n 'hbs!mybundle/trial/list/sortable.listitem'\n], function(Backbone, Marionette, SortableListView, template){\n 'use strict';\n\n var ItemView = Marionette.ItemView.extend({\n   template: template,\n   templateHelpers: function() {\n     return {\n       label: this.model.get('label'),\n       name: this.model.get('id')\n     };\n   }\n });\n\n var collection = new Backbone.Collection([\n   {id: '1', label: 'One'},\n   {id: '2', label: 'Two'},\n   {id: '3', label: 'Three'}\n ]);\n\n var listView = new SortableListView({itemView: ItemView, collection: collection, hasNonRemovableItem: true, isItemNonRemovable: function(){return true;}});\n new Marionette.Region({el: '.el-host'}).show(listView);\n\n});\n")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#module_SortableListView"},"SortableListView")," : ",(0,i.kt)("code",null,"d2/sdk/controls/list/sortable.list.view"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#module_SortableListView..SortableListView"},"~SortableListView"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#new_module_SortableListView..SortableListView_new"},"new SortableListView(options)")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#module_SortableListView..RemovableDetectionCallback"},"~RemovableDetectionCallback")," \u21d2 ",(0,i.kt)("code",null,"Boolean"))))),(0,i.kt)("a",{name:"module_SortableListView..SortableListView"}),(0,i.kt)("h3",{id:"sortablelistviewsortablelistview"},"SortableListView~SortableListView"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": inner class of ",(0,i.kt)("a",{parentName:"p",href:"#module_SortableListView"},(0,i.kt)("code",null,"SortableListView")),"  "),(0,i.kt)("a",{name:"new_module_SortableListView..SortableListView_new"}),(0,i.kt)("h4",{id:"new-sortablelistviewoptions"},"new SortableListView(options)"),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Param"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Default"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"options"),(0,i.kt)("td",null,(0,i.kt)("code",null,"object")),(0,i.kt)("td",null),(0,i.kt)("td",null,(0,i.kt)("p",null,"Constructor options. Following are the options specifically supported by the list apart from those from its supertype."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"options.itemView"),(0,i.kt)("td",null,(0,i.kt)("code",null,(0,i.kt)("a",{href:"https://marionettejs.com/docs/v2.4.7/marionette.itemview.html"},"Marionette.ItemView"))),(0,i.kt)("td",null),(0,i.kt)("td",null,(0,i.kt)("p",null,"View class to use for rendering each item in the list."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"[options.hasNonRemovableItem]"),(0,i.kt)("td",null,(0,i.kt)("code",null,"Boolean")),(0,i.kt)("td",null,(0,i.kt)("code",null,"false")),(0,i.kt)("td",null,(0,i.kt)("p",null,"Whether the list has non-removable item. If set to ",(0,i.kt)("code",null,"true")," then ",(0,i.kt)("code",null,"isItemNonRemovable()")," callback is executed for each item to decide removability."))),(0,i.kt)("tr",null,(0,i.kt)("td",null,"[options.isItemNonRemovable]"),(0,i.kt)("td",null,(0,i.kt)("code",null,"RemovableDetectionCallback")),(0,i.kt)("td",null),(0,i.kt)("td",null,(0,i.kt)("p",null,"Callback to decide if a particular item is non-removable"))),"  ")),(0,i.kt)("a",{name:"module_SortableListView..RemovableDetectionCallback"}),(0,i.kt)("h3",{id:"sortablelistviewremovabledetectioncallback--boolean"},"SortableListView~RemovableDetectionCallback \u21d2 ",(0,i.kt)("code",null,"Boolean")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Kind"),": inner typedef of ",(0,i.kt)("a",{parentName:"p",href:"#module_SortableListView"},(0,i.kt)("code",null,"SortableListView")),(0,i.kt)("br",{parentName:"p"}),"\n",(0,i.kt)("strong",{parentName:"p"},"Returns"),": ",(0,i.kt)("code",null,"Boolean")," - Return ",(0,i.kt)("inlineCode",{parentName:"p"},"true")," to indicate the item shouldn't be removable.  "),(0,i.kt)("table",null,(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Param"),(0,i.kt)("th",null,"Type"),(0,i.kt)("th",null,"Description"))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("td",null,"model"),(0,i.kt)("td",null,(0,i.kt)("code",null,"Backbone.Model")),(0,i.kt)("td",null,(0,i.kt)("p",null,"Model behind the item being evaluated."))),"  ")))}p.isMDXComponent=!0}}]);